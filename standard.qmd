---
title: "Standard analysis"
author: "Izar de Villasante"
editor: 
  markdown: 
    wrap: 72
---

```{r dtable}
#| include: false
#| eval: true
dtable<-function(data){
  DT::datatable(
        { data},
        filter = 'top',
        # selection = list(mode = 'multiple', selected = c(1:10), target = 'column', selectable = c(-2, -3)),
        fillContainer = F,
        # style =  "bootstrap",

        extensions = 'Buttons',

        options = list(
          paging = TRUE,
          pageLength = 20,
          searching = TRUE,
          fixedColumns = TRUE,
          autoWidth = FALSE,
          scrollX=TRUE,
          digits=4,
          ordering = TRUE,
          dom = 'Bfrtip',
          buttons = list(
            list(
              extend = "collection",
              text = 'download entire dataset',
              action = DT::JS("function ( e, dt, node, config ) {
                                                    Shiny.setInputValue('test', true, {priority: 'event'});
                                                    }")
            ),
            'copy',
            'csv',
            'excel'
          ),

          class = "display",
          server=TRUE
        ),
      ) |> DT::formatRound(which(sapply(data,is.double)),4)
}
```

```{r}
#| include: false
#| eval: true
#| context: server
myModal <- function() {

  div(id = "test",
      shiny::modalDialog(downloadButton("download1","Download data as csv"),
                         br(),
                         br(),
                         downloadButton("download2","Download data as excel"),
                         easyClose = TRUE, title = "Download Table")
  )
}

renderDT<- function(data){
  output$dtable <- DT::renderDataTable({
    dtable(data)
  })
  

    shiny::observeEvent(input$test, {
      print("hello")
      showModal(myModal())
    })
    output$download1 <- shiny::downloadHandler(
      filename = function() {
        paste("data-", Sys.Date(), ".csv", sep="")
      },
      content = function(file) {
        write.csv(data, file)
      }
    )

    output$download2 <- shiny::downloadHandler(
      filename = function() {
        paste("data-", Sys.Date(), ".xlsx", sep="")
      },
      content = function(file) {
        writexl::write_xlsx(data, file)
      })
}

```

# Standard analysis

## Workflow:

The standard workflow consists of three steps: 
1. pre-processing (qc, signal normalization, filtering); 
2. differential analysis (DMPs,DMRs) and 
3. functional analysis of DMR associated genes (GO, pathways)

### 1.Pre-processing:

#### Data QC:

```{r}
source("R/functions.R")
library(data.table)
ss<-readRDS("data/SS.rds")
ss$age_grp <- "Adult"
ss[Age < 18, age_grp:="Child"]

```

The following filters are applied:

1.  Probes: Only probes with a signal detection p.value \< 0.01 for each
    sample are retained. (P-value calculated with `minfi::detectionP()`)
2.  Sample: Only samples with at least 90% of the probes detected are
    retained.

After applying these filters one sample was discarded:
`r ss[Sentrix_ID =="206702460034"&Sentrix_Position=="R05C01",.(Sample_Name,Condition,Age)]`

```{r}
ss <- ss[Sample_Name != "lnf-21.5",]
```

#### Background correction and signal normalization:

Raw signal is normalized. The `preprocessNoob` function from `minfi`
package is used to remove background noise and a visual inspection of
the data is done [raw-qc](standard.qmd#sec-qc). Signal normalization
with ssNoob.

#### Filtering:

Known cross-reactive probes and SNPs are filtered out.

### 2.Differential methylation analysis:

Differences in methylation between different groups are analysed using
linear regression models. For single probes (DMPs) we use the limma
package, for regions of adjacent probes we use DMRcate (also linear
regression based).

#### Parameter tunning:

We have modified our standard pipeline in order to apply similar filters as those described in the paper by Steegena et al. @Steegenga2014 with similar samples.

-   ∆β > 0.05: Difference in mean beta values between groups of at least 0.05.

-   T > 2 : t-statisitc greater than 2

-   pval < 0.01: P-value smaller than 0.01 in the linear model.



To answer the research questions we employ the following models:

#### model 1: (m1 "data/ss_Adults.rds", "~0 + Condition", Noob )

```{r}
#| include: false

ss<-readRDS("data/ss_Adults.rds")
```


=\> Identify methylation change associated with adult XALD.

Only using adult samples we create a variable called `Condition` , which
contains 3 groups:

-   CTL.adult: the adult controls
-   AMN disease without cerebral condition
-   cAMN disease withcerebral condition.

```{r}
table(ss$Condition)
```

```{r}
dtable(ss[, .(Sample_Name,Condition)])
```


Formula: meth \~ 0 + Condition


RESULTS:

```{r}

```


No difference at probe-level or region level observed. (pval =?, FDR =?,
methylation difference =)

#### model 2: (m2 "data/SS.rds", "~0 + Condition", Noob )

=\> Are there any methylation changes associated with any of the
experimental groups such as age or disease phenotype?

Combining children and adults we create a `Condition` variable, which
contains 5 groups formed by all available combinations of disease and
age phenotypes:

-   CTL.adult: Control samples for adults

-   CTL.child: Control samples for childs

-   AMN: Adults with the disease condition 1 (?check if this really was
    included?)

-   cAMN: Adults with the disease condition 1 & condition 2

-   cALD: Children with the disease condition 2

```{r}
dtable(ss[, .(Sample_Name,Condition)])

```

```{r}
table(ss[, Condition])
```

Formula: meth \~ 0 + Condition

RESULTS

**This model was statistically significant (pval =?) for the comparison
(contrast) cALD-cAMN identifying 116 differentially methylated probes
(DMPs) (methylation difference =).**

However, no differentially methylated regions (DMRs) could be identified
(FDR, meth difference ?).

#### model 3 (m4 "data/SS.rds", "~0 + Condition + Age", Noob )

=\> Aside from age (0-82 years) related, are there any specific
methylation changes associated with any of the experimental groups?

model 3 = m2 + Age as a covariate\
Formula: meth \~ 0 + Condition + Age

No difference at probe-level or region level observed.

### 3. Pathway analysis {#sec-pathway}

The 116 DMPs (XX hypo, XX hyper) between cALD and cAMN (model 2) were
associated with XXX and XXX genes, respectively. For those genes we
performed gene set enrichment analysis:

![Pathway analysis from genes associated to DMPs in model 2 (meth \~ 0 +
Condition).](data/pathways_m2_camd-cald.png){alt="Pathway analysis from genes associated to DMPs in model 2."}

## Discussion

We performed a [Standard methylation
analysis](standard.qmd#sec-workflow), following our standard analysis
workflow.

Within the adult group we don't detect significant difference between
controls and disease. Incorporating children samples, we observe few
differences between children and adults with cerebral ALD/AMN but none
in the other age\~phenotype comparisons. Correcting for age (as a
continous variable) in the analysis, confirms age as the dominating
factors.

Nevertheless, the amount of changes related to age in XALD where much
less than expected from previous studies (communication with
colaborator).

For this reason (and to further study the pattern of age related
changes) we propose alternative approaches:

1.  Genereate a [regression model with
    age-corrected](signature.qmd#sec-residuals) beta values, to remove
    the effect of age from the methylation values.
2.  Look for specific age signature in our data by predicting
    [age-related sites within the
    controls](signature.qmd#sec-inhouseref) and checking for enrichment
    of those sites in the disease.
3.  Analysing [previously reported age-related
    sites](signature.qmd#sec-PBMC) from literature.\
4.  Reproducing [age-acceleration analysis](horvath.qmd) from existing
    literature.
