[
  {
    "objectID": "horvath.html",
    "href": "horvath.html",
    "title": "Methylation: Epigenetic clock",
    "section": "",
    "text": "Context\nMany different approaches have been used to predict age from epigenetic marks. Possibly the most popular being the method proposed by Horvath et. al. Epigenome-wide association study and epigenetic age acceleration associated with cigarette smoking among Costa Rican adults\n\n\n\n\n\n\nCalculation of epigenetic aging biomarkers\n\n\n\nEpigenetic age was calculated using five clocks: the Horvath Pan Tissue, Horvath Skin-Blood, Hannum Blood, PhenoAge, and GrimAge clocks. We calculated all epigenetic aging biomarkers utilizing the online Horvath calculator (http://dnamage.genetics.ucla.edu/) with the advanced analysis option. The outcome of interest was the “AgeAccelerationResidual” or residuals resulting from a linear regression model where each DNA methylation clock is regressed on chronological age of each participant. We refer to all acceleration measures as Epigenetic Age Acceleration (EAA) for the specific clock and defined the residuals of the DNA methylation estimate of telomere length linearly regressed on chronological age as DNAmTL adjusted for age. A positive EAA indicates that the estimated epigenetic age is higher than the chronological age (increased biological aging) and a negative DNAmTL adjusted for age reflects a shorter telomere length. In addition, we tested Extrinsic EAA (EEAA) and Intrinsic EAA (IEAA) for Hannum’s and Horvath’s clocks, respectively51. The EEAA measure is associated with age-related changes in blood cell counts due to immune system aging and is calculated by upweighting the contributions of age-associated blood cell counts (naive cytotoxic T cells, exhausted cytotoxic T cells, and plasmablasts). The IEAA measure is independent of blood cell counts, represents intrinsic cellular aging, and is calculated by adding immune cell counts in addition to chronological age when calculating regression residuals. Analyses of epigenetic clocks included the 489 participants with high quality DNA methylation data.\n\n\nFrom the results of the Epigenetic Age Clockcalculator we are going to use the following:\nData preparation:\n\nlibrary(data.table)\nss_adults&lt;-readRDS(\"data/ss_Adults.rds\")\n\n\nsource(\"R/functions.R\")\nss_horvath&lt;-ss_adults\nss_horvath$Female=0\nss_horvath$Tissue=\"Blood PBMC\"\nss_horvath[,SampleID:=Sample_Name]\nss_horvath$Sample_Name&lt;-NULL\ndata.table::setcolorder(ss_horvath,\"SampleID\")\nb&lt;-data.table::as.data.table(betas,keep.rownames = T)\nb[,ProbeID:=rn]\nb$rn&lt;-NULL\ndata.table::setcolorder(b,c(\"ProbeID\",ss_horvath$SampleID))\ndata.table::fwrite(b,\"data/adult_betas.csv\")\ndata.table::fwrite(ss_horvath,\"data/ss_adults.csv\")\n\nNow this data is sent to the horvath calculator and these are the results:\n\nclock &lt;- data.table::fread(\"data/DNAmAgeCalcProject_2124_Results.csv\")\n\n\nDNAmAge Horvath1, Pan-tissue clock: The original Horvath 2013 pan-tissue clock. Developed by Steve Horvath and trained on many different human cell types & tissues. @Horvath2013\nDNAmPhenoAge PhenoAge: PhenoAge morbidity & mortality predictor, developed by Morgan Levine in Steve Horvath’s lab. @Levin2018\nDNAmAgeHannum: Blood predictor of age, based on work by Hannum in Ideker lab 2013. @Hannum2013\nDNAmAgeSkinBloodClock Horvath2, Skin & Blood Age: Skin&BloodAge is trained on blood, saliva, buccal, and skin samples. It is useful for in vitro studies and it is one of if not the most accurate age predictors available.@Horvath2018\nIEAA, Intrinsic cellular age Horvath: Intrinsic cell aging measure, which tries to eliminate effects of cellular composition.@Chen2016\nIEAA.Hannum Intrinsic cellular age Hannum: Intrinsic cell aging measure, which tries to eliminate effects of cellular composition.@Chen2016\nDNAmFitAge McGreevy & Horvath measure that incorporates GrimAge and additional predictors of fitness-based functional measures. @Jokai2022\nDNAmGrimAge2BasedOnPredictedAge Grim2 predicted age: Follow-on version of GrimAge mortality predictor when imputing age with Skin&BloodAge clock. Developed by Ake Lu and Steve Horvath.@Lu2022\nDNAmGrimAge2BasedOnRealAge Grim2 real age: Follow-on version of GrimAge which is considered the best mortality predictor available. Developed by Ake Lu and Steve Horvath.@Lu2022\n\n\ncols &lt;-c(\"DNAmAge\", \"DNAmAgeHannum\", \"DNAmPhenoAge\", \"DNAmAgeSkinBloodClock\", \"IEAA\", \"DNAmFitAge\", \"DNAmGrimAge2BasedOnPredictedAge\", \"DNAmGrimAge2BasedOnRealAge\n\"\n)\n\nclock[,.SD, .SDcols= c(\"SID\",colnames(clock)[colnames(clock) %like% \"DNAm\"])]\n\n                     SID DNAmGait_noAge DNAmGrip_noAge DNAmVO2max DNAmGait_wAge\n 1:        AMN_PE.005.V1             NA             NA         NA            NA\n 2:           BAB.1.8.M0             NA             NA         NA            NA\n 3:             DNA.AMCS             NA             NA         NA            NA\n 4:         DNA.CTL.25.2             NA             NA         NA            NA\n 5:         DNA.CTL.35.3             NA             NA         NA            NA\n 6:         DNA.CTL.44.2             NA             NA         NA            NA\n 7:          DNA.CTL.6.5             NA             NA         NA            NA\n 8:         DNA.CTL.61.1             NA             NA         NA            NA\n 9:         DNA.CTL.64.2             NA             NA         NA            NA\n10:         DNA.CTL.80.1             NA             NA         NA            NA\n11:              DNA.JCG             NA             NA         NA            NA\n12:              DNA.JOG             NA             NA         NA            NA\n13:              DNA.RCP             NA             NA         NA            NA\n14:        DNA.SPG.102.2             NA             NA         NA            NA\n15:        DNA.SPG.122.2             NA             NA         NA            NA\n16:         E4.EC.007.V1             NA             NA         NA            NA\n17:         E4.EC.008.V1             NA             NA         NA            NA\n18:         E4.EC.011.V1             NA             NA         NA            NA\n19:         E4.EC.013.V1             NA             NA         NA            NA\n20:         E4.EC.311.V2             NA             NA         NA            NA\n21:         E4.EC.313.V2             NA             NA         NA            NA\n22:     E4.PIOBCN.003.M0             NA             NA         NA            NA\n23:        EC.001.V4.JOG             NA             NA         NA            NA\n24:            EC.002.V1             NA             NA         NA            NA\n25:            EC.004.V1             NA             NA         NA            NA\n26:            EC.005.V1             NA             NA         NA            NA\n27:            EC.006.V1             NA             NA         NA            NA\n28:            EC.009.V1             NA             NA         NA            NA\n29:            EC.010.V1             NA             NA         NA            NA\n30:     EC.0309.M0.es.V2             NA             NA         NA            NA\n31:           EC.0312.V2             NA             NA         NA            NA\n32:           EC.0401.M0             NA             NA         NA            NA\n33:           EC.0402.M0             NA             NA         NA            NA\n34:           EC.0403.M0             NA             NA         NA            NA\n35:           EC.0404.M0             NA             NA         NA            NA\n36:           EC.0405.M0             NA             NA         NA            NA\n37:           EC.0406.M0             NA             NA         NA            NA\n38:           EC.0407.M0             NA             NA         NA            NA\n39:           EC.0408.M0             NA             NA         NA            NA\n40:           EC.0409.M0             NA             NA         NA            NA\n41:           EC.0410.M0             NA             NA         NA            NA\n42:           EC.0411.M0             NA             NA         NA            NA\n43:           EC.0412.M0             NA             NA         NA            NA\n44:           EC.0413.M0             NA             NA         NA            NA\n45:           EC.0414.M0             NA             NA         NA            NA\n46:           EC.0415.M0             NA             NA         NA            NA\n47:           EC.0416.M0             NA             NA         NA            NA\n48:           EC.0417.M0             NA             NA         NA            NA\n49:           EC.0418.M0             NA             NA         NA            NA\n50:           EC.0419.M0             NA             NA         NA            NA\n51:           EC.0420.M0             NA             NA         NA            NA\n52:           EC.0421.M0             NA             NA         NA            NA\n53:           EC.0422.M0             NA             NA         NA            NA\n54:           EC.0423.M0             NA             NA         NA            NA\n55:           EC.0424.M0             NA             NA         NA            NA\n56:                  FVF             NA             NA         NA            NA\n57:                  ILB             NA             NA         NA            NA\n58:              JMGM..1             NA             NA         NA            NA\n59:                 JMGP             NA             NA         NA            NA\n60:                  JRD             NA             NA         NA            NA\n61:                  MLB             NA             NA         NA            NA\n62:          MVG_post24h             NA             NA         NA            NA\n63:        PIOBCN.001.M0             NA             NA         NA            NA\n64: PIOBCN.006.M0.1_de_3             NA             NA         NA            NA\n65:            PIOBCN007             NA             NA         NA            NA\n66:        PIODON.003.M0             NA             NA         NA            NA\n67:        PIODON.004.M0             NA             NA         NA            NA\n68:                RCP.2             NA             NA         NA            NA\n69:          SGR_post24h             NA             NA         NA            NA\n70:             spg.98.2             NA             NA         NA            NA\n71:             spg.98.3             NA             NA         NA            NA\n                     SID DNAmGait_noAge DNAmGrip_noAge DNAmVO2max DNAmGait_wAge\n    DNAmGrip_wAge DNAmFEV1_wAge DNAmFEV1_noAge   DNAmTL  DNAmADM DNAmB2M\n 1:            NA            NA             NA 6.933017 330.4432 1602368\n 2:            NA            NA             NA 7.959233 288.2629 1112677\n 3:            NA            NA             NA 7.647946 281.9767 1063504\n 4:            NA            NA             NA 7.542943 290.1822 1263986\n 5:            NA            NA             NA 7.435417 323.6624 1403018\n 6:            NA            NA             NA 7.033227 306.6156 1463575\n 7:            NA            NA             NA 7.669478 298.6673 1279957\n 8:            NA            NA             NA 7.286977 321.8168 1370500\n 9:            NA            NA             NA 7.632318 306.2840 1363656\n10:            NA            NA             NA 7.588048 277.0112 1304415\n11:            NA            NA             NA 7.341689 311.0155 1389708\n12:            NA            NA             NA 7.757917 281.0347 1161265\n13:            NA            NA             NA 7.917095 289.4149 1061256\n14:            NA            NA             NA 7.171947 317.4878 1454055\n15:            NA            NA             NA 7.363500 316.4529 1370471\n16:            NA            NA             NA 7.199603 321.1843 1457787\n17:            NA            NA             NA 7.072604 318.2443 1285168\n18:            NA            NA             NA 7.577971 293.8232 1268145\n19:            NA            NA             NA 8.171812 293.4795 1163141\n20:            NA            NA             NA 7.426426 315.3388 1380233\n21:            NA            NA             NA 7.839012 297.1164 1185610\n22:            NA            NA             NA 7.588238 294.9105 1221032\n23:            NA            NA             NA 7.692240 295.4669 1231252\n24:            NA            NA             NA 7.437410 322.6716 1394761\n25:            NA            NA             NA 7.494047 304.4125 1366896\n26:            NA            NA             NA 7.648805 297.6346 1308216\n27:            NA            NA             NA 7.461499 297.7543 1261403\n28:            NA            NA             NA 7.785533 291.5279 1154059\n29:            NA            NA             NA 7.621175 308.9470 1367356\n30:            NA            NA             NA 7.361201 334.8560 1446271\n31:            NA            NA             NA 7.079675 327.3872 1509985\n32:            NA            NA             NA 7.785297 307.0589 1338910\n33:            NA            NA             NA 7.145727 329.4351 1586570\n34:            NA            NA             NA 7.948473 290.6410 1181460\n35:            NA            NA             NA 7.487681 308.8234 1391803\n36:            NA            NA             NA 7.643711 295.4819 1221952\n37:            NA            NA             NA 7.181488 306.9281 1214565\n38:            NA            NA             NA 7.518854 296.1270 2059010\n39:            NA            NA             NA 7.545547 306.2999 1313738\n40:            NA            NA             NA 7.319539 318.0688 1435953\n41:            NA            NA             NA 7.162991 317.7675 1432217\n42:            NA            NA             NA 7.406724 279.9344 1219705\n43:            NA            NA             NA 7.919265 296.6332 1302423\n44:            NA            NA             NA 7.162805 294.8447 1424577\n45:            NA            NA             NA 7.892177 294.9064 1262250\n46:            NA            NA             NA 7.970743 281.0984 1121915\n47:            NA            NA             NA 6.950649 337.2721 1544855\n48:            NA            NA             NA 7.186151 323.6806 1385338\n49:            NA            NA             NA 7.561751 312.0685 1403195\n50:            NA            NA             NA 7.566605 302.3507 1299940\n51:            NA            NA             NA 7.777588 282.6459 1228338\n52:            NA            NA             NA 7.769941 296.6142 1249070\n53:            NA            NA             NA 7.500417 287.9650 1262449\n54:            NA            NA             NA 6.962651 301.0490 1514767\n55:            NA            NA             NA 7.346766 308.0009 1304675\n56:            NA            NA             NA 6.950651 316.7005 1603673\n57:            NA            NA             NA 6.993427 324.0250 1472526\n58:            NA            NA             NA 7.324129 311.9839 1316861\n59:            NA            NA             NA 7.214503 330.2648 1435127\n60:            NA            NA             NA 7.299349 291.1926 1274124\n61:            NA            NA             NA 7.100009 320.5210 1478772\n62:            NA            NA             NA 7.395952 336.4076 1465777\n63:            NA            NA             NA 7.533563 321.4811 1297603\n64:            NA            NA             NA 7.631838 297.3729 1264286\n65:            NA            NA             NA 7.144569 334.4516 1552104\n66:            NA            NA             NA 7.349450 319.8630 1363171\n67:            NA            NA             NA 7.529151 340.4287 1521040\n68:            NA            NA             NA 8.211655 301.7557 1067151\n69:            NA            NA             NA 7.685251 308.9260 1203858\n70:            NA            NA             NA 6.861106 346.9338 1656250\n71:            NA            NA             NA 7.212703 311.1601 1392100\n    DNAmGrip_wAge DNAmFEV1_wAge DNAmFEV1_noAge   DNAmTL  DNAmADM DNAmB2M\n    DNAmCystatinC DNAmGDF15  DNAmLeptin DNAmPACKYRS DNAmPAI1 DNAmTIMP1\n 1:      664421.7  885.9745  5317.93513   44.006070 14598.79  34302.55\n 2:      541161.2  151.2389  1858.29587   10.696328 14318.22  29056.57\n 3:      508618.1  282.0254  7246.88234   32.193572 19260.84  28790.46\n 4:      583134.4  313.8408  4486.98961   11.057870 16377.63  30496.14\n 5:      583639.7  598.0710  4577.31971   16.398235 17784.25  31226.75\n 6:      586670.0  555.6851  6261.83824   23.356154 18392.24  30983.64\n 7:      574989.0  809.8991  -130.43145   18.111992 14988.63  30338.98\n 8:      594861.9  505.8420  5351.69279   32.184837 16727.24  31119.37\n 9:      589599.6  544.2684  4643.50005   12.768804 19326.66  31803.38\n10:      582301.3  424.6374  4820.49850   11.187709 14381.04  30286.69\n11:      572604.8  564.4687  1359.67640   18.750580 14240.22  31360.77\n12:      510091.1  204.7006  3481.89491   -0.305558 16104.03  29483.43\n13:      478846.5  239.7711  3869.46792    6.985997 18248.67  29414.03\n14:      613063.4  703.3018  4618.80590   13.046412 17226.80  32908.04\n15:      565464.0  497.5544  6611.90404   20.699328 18269.36  30204.79\n16:      574951.9  815.2727  -440.29147   38.125162 13026.03  32316.29\n17:      599694.4  697.3290  3146.33125   26.742121 14472.78  31230.83\n18:      584464.3  837.5317  1627.86810   14.560279 13565.37  30988.00\n19:      548528.6  218.5584  2796.38491    4.405463 12817.20  29535.81\n20:      598968.1  812.6817  5316.03854   14.579338 15409.30  31733.16\n21:      548489.3  395.7522  4846.59659    6.150485 12711.28  30697.89\n22:      556483.8  469.9760  4077.15543   19.763484 15124.15  30448.84\n23:      505767.3  250.0698  8745.75941    3.589853 20157.21  29013.18\n24:      611818.3  580.4349  4507.28818   32.075136 17298.77  32865.94\n25:      610603.5  483.8738  1121.56550   15.690746 13748.31  31742.43\n26:      578720.8  359.2998  3372.17527   11.249794 15258.72  31411.42\n27:      570738.8  423.7406  3279.01978   11.753441 17354.05  30601.46\n28:      516608.2  266.1075  6403.01434   14.563352 17014.53  29749.57\n29:      586024.6  532.1486  2885.91716   14.763518 13467.23  30407.48\n30:      586195.5  498.3402  4895.08923   11.768863 21073.22  31651.04\n31:      624187.1  657.7991  7067.17373   21.194221 17387.64  32993.03\n32:      563074.9  495.3452  5082.02772    3.649076 18542.01  30899.97\n33:      673648.0  970.1124 -1096.16665   51.425320 17337.05  33416.76\n34:      569944.0  416.3577   660.17088   14.369981 15316.93  29758.38\n35:      612448.7  806.7095  1295.24676   10.872930 16725.36  32066.93\n36:      562169.6  447.7495  2473.84796    4.688445 14180.73  30241.54\n37:      563742.5  497.0278  4636.08840   34.067087 11383.08  30445.31\n38:      583018.7  538.6636  3217.54333    6.118899 13683.93  31109.82\n39:      570044.3  555.1847  2003.05890   12.225247 18586.99  31686.83\n40:      593828.2  562.9134  4417.46120   15.818248 18031.21  32096.66\n41:      638073.5  645.0973  3856.75047   13.843918 15346.22  31890.79\n42:      553570.7  505.6280  1474.97375   13.301085 16198.61  28951.45\n43:      606458.2  616.5048  3472.07346   11.617192 13653.58  30571.25\n44:      616475.5  520.7665  3287.98339   19.670087 16403.52  31452.01\n45:      562937.6  582.4356  2016.79192   18.321852 16911.68  29890.40\n46:      550359.1  463.1617  1496.98249   37.833677 15543.12  30142.83\n47:      628429.8  848.8972  1951.30910   20.541320 14478.71  33468.86\n48:      565890.6  693.7194  2686.32381   10.528429 16873.46  31445.59\n49:      604433.1  423.3115  3369.16721   14.737625 16911.37  32132.78\n50:      576653.9  591.4198  4607.03176   13.277313 11707.60  30802.03\n51:      561122.3  418.2437  2837.56142   37.285514 14172.59  29685.74\n52:      539934.9  458.7953  3995.53147    3.613665 16466.18  30152.85\n53:      572412.5  398.9144  5062.42831   12.688533 15101.64  30621.70\n54:      639111.8  605.0368  2735.47157   20.797431 15918.61  32402.74\n55:      560654.6  751.9435  2709.16590   13.542495 14659.31  31434.55\n56:      626000.8  814.4558  7484.28165   12.571848 17582.06  32342.76\n57:      576000.5  969.1507 14068.25263    9.949189 22509.29  29826.74\n58:      591098.2  653.0948   949.83125    9.385453 12206.62  32398.87\n59:      618499.4  701.2242   -26.58579    9.698653 14097.89  33575.79\n60:      539269.4  419.5926  1366.54552   27.835337 14630.92  29330.37\n61:      609596.7  880.4524  5392.64592   41.394182 17557.73  32381.76\n62:      645580.1  535.6443  1365.21906   33.781479 15435.04  32847.06\n63:      604979.0  540.9997  4668.15335   14.152710 15398.65  31589.34\n64:      557348.9  445.5484  7335.28129   12.035854 17394.88  30512.09\n65:      607068.5  739.5732 10644.69123    7.748645 19331.25  32646.07\n66:      602247.0  444.4111  4021.10005   13.912789 15903.64  31511.67\n67:      633390.9  588.8165   861.03633   12.916993 16304.15  32490.59\n68:      510001.5  244.6953 12123.02995    8.827313 18573.02  27971.68\n69:      557062.0  379.8128  1388.99341   16.387025 11340.13  30083.09\n70:      635480.0  880.4407  7942.61337    7.972080 19963.26  34619.24\n71:      551149.7  468.7246  4782.62639   25.339199 19886.21  30985.28\n    DNAmCystatinC DNAmGDF15  DNAmLeptin DNAmPACKYRS DNAmPAI1 DNAmTIMP1\n    DNAmGDF_15 DNAmCystatin_C DNAmTIMP_1  DNAmadm DNAmpai_1  DNAmleptin\n 1:   773.5786       633295.9   32773.25 319.1008  14407.48  5317.93513\n 2:   126.7213       534371.5   28722.97 285.7887  14099.10  1858.29587\n 3:   244.3385       498181.5   28277.68 278.1735  19161.13  7246.88234\n 4:   253.6164       566456.5   29676.70 284.1046  16162.85  4486.98961\n 5:   584.9956       580018.7   31048.84 322.3429  17577.22  4577.31971\n 6:   557.7046       587229.2   31011.11 306.8194  18204.34  6261.83824\n 7:   795.0251       570869.9   30136.60 297.1663  14748.51  -130.43145\n 8:   511.8283       596519.7   31200.82 322.4209  16543.28  5351.69280\n 9:   477.0793       570993.0   30889.18 299.5036  19160.08  4643.50005\n10:   409.3005       578054.0   30078.01 275.4635  14162.35  4820.49851\n11:   521.7208       560766.6   30779.13 306.7016  14136.12  1359.67640\n12:   166.5419       499530.6   28964.23 277.1839  16008.42  3481.89491\n13:   196.2510       466794.5   28821.88 285.0231  18164.58  3869.46792\n14:   709.2374       614707.1   32988.80 318.0868  17094.92  4618.80590\n15:   510.6988       569104.1   30383.64 317.7793  18098.75  6611.90405\n16:   821.4395       576659.7   32400.20 321.8066  12838.67  -440.29147\n17:   661.5180       589777.3   30743.58 314.6305  14212.61  3146.33125\n18:   811.3531       577214.6   30631.80 291.1814  13337.35  1627.86810\n19:   168.1618       534572.2   28850.10 288.3937  12610.99  2796.38492\n20:   785.6105       591471.3   31364.82 312.6069  15183.16  5316.03854\n21:   370.1775       541406.9   30349.91 294.5355  12511.74  4846.59659\n22:   411.4526       540276.9   29652.55 289.0046  14943.50  4077.15544\n23:   195.2919       490597.7   28267.85 289.9390  20076.60  8745.75941\n24:   566.7621       608031.9   32679.90 321.2918  17086.96  4507.28818\n25:   445.9793       600109.4   31226.82 300.5884  13567.61  1121.56550\n26:   347.4671       575443.9   31250.42 296.4405  15078.76  3372.17527\n27:   447.1021       577208.3   30919.32 300.1118  17172.91  3279.01978\n28:   259.6114       514809.2   29661.18 290.8723  16851.77  6403.01434\n29:   469.1145       568568.5   29549.82 302.5859  13220.71  2885.91716\n30:   482.7008       581864.4   31438.25 333.2777  20972.31  4895.08923\n31:   619.7816       613658.9   32475.74 323.5506  17197.18  7067.17373\n32:   441.2877       548104.8   30164.44 301.6036  18383.14  5082.02772\n33:   895.8819       653091.4   32406.75 321.9441  17072.00 -1096.16665\n34:   370.8219       557411.9   29138.80 286.0457  15073.22   660.17089\n35:   722.4151       589105.1   30919.99 300.3168  16499.53  1295.24676\n36:   388.0453       545635.7   29429.18 289.4569  13977.87  2473.84796\n37:   522.2750       570734.1   30788.83 309.4759  11177.77  4636.08840\n38:   512.5966       575800.0   30755.14 293.4965  13504.62  3217.54333\n39:   524.8419       561641.5   31273.98 303.2379  18399.34  2003.05890\n40:   518.2424       581457.4   31488.85 313.5608  17848.94  4417.46120\n41:   617.2283       630441.8   31511.60 317.7925  15068.77  3856.75047\n42:   515.9863       556528.3   29092.39 284.8561  15931.28  1474.97375\n43:   587.9723       598556.7   30183.03 293.7538  13418.30  3472.07346\n44:   487.3928       607233.3   30997.91 291.4768  16166.80  3287.98339\n45:   590.3544       565183.3   29998.15 295.7056  16717.13  2016.79192\n46:   422.1358       538997.8   29584.61 276.9583  15346.57  1496.98249\n47:   805.8827       616517.8   32883.59 332.9313  14271.63  1951.30910\n48:   685.2706       563550.8   31330.63 322.8279  16698.94  2686.32381\n49:   393.4962       596176.4   31727.11 309.0597  16647.14  3369.16721\n50:   525.7253       558461.1   29908.17 295.7211  11468.09  4607.03176\n51:   401.3158       556434.5   29455.41 280.9376  13959.04  2837.56142\n52:   408.8572       526105.6   29473.37 291.5746  16261.22  3995.53148\n53:   382.0849       567751.9   30392.71 286.2667  14904.34  5062.42831\n54:   558.9775       626356.6   31776.04 296.4009  15730.06  2735.47157\n55:   689.8716       543465.1   30589.98 301.7369  14480.07  2709.16590\n56:   800.5524       622150.6   32153.59 315.2975  17472.32  7484.28165\n57:   902.0956       557431.0   28914.36 317.2581  22399.22 14068.25263\n58:   613.0667       580013.2   31854.24 307.9445  12048.80   949.83125\n59:   684.3445       613824.9   33346.11 328.5613  13936.97   -26.58578\n60:   449.1158       547445.2   29732.07 294.1719  14464.38  1366.54552\n61:   829.5083       595488.8   31688.59 315.3800  17410.17  5392.64592\n62:   469.5391       627342.6   31947.60 329.7366  15183.84  1365.21906\n63:   504.5944       594897.3   31094.00 317.8072  15164.36  4668.15335\n64:   405.4592       546247.0   29966.62 293.3273  17220.75  7335.28129\n65:   715.8822       600507.7   32323.72 332.0608  20086.62 10644.69124\n66:   384.1038       585546.1   30691.11 313.7771  15686.64  4021.10006\n67:   490.2665       606099.4   31149.68 330.4835  16089.31   861.03633\n68:   201.2984       497983.6   27381.20 297.3763  18447.29 12123.02995\n69:   338.5931       545647.0   29522.24 304.7663  11112.22  1388.99342\n70:   855.7098       628631.3   34282.74 344.4380  19860.05  7942.61337\n71:   488.7910       556706.7   31258.31 313.1851  19780.94  4782.62639\n    DNAmGDF_15 DNAmCystatin_C DNAmTIMP_1  DNAmadm DNAmpai_1  DNAmleptin\n    DNAmGrimAgeBasedOnPredictedAgeAdjAge DNAmGrimAgeBasedOnRealAgeAdjAge\n 1:                           1.17643768                      5.81425115\n 2:                          -1.64889693                     -1.56794660\n 3:                           4.48416394                      5.69046440\n 4:                          -3.86379977                     -1.72026238\n 5:                           2.64187667                      1.27800975\n 6:                           5.66955094                      3.39846736\n 7:                           2.66240793                      1.68528357\n 8:                           8.30647052                      5.71858649\n 9:                          -4.62377938                     -2.48311723\n10:                          -2.32556797                     -3.31466111\n11:                           0.91093650                      1.72038371\n12:                          -5.62020179                     -4.60058305\n13:                          -4.90474267                     -3.56002516\n14:                           1.69311712                     -1.37340562\n15:                           4.76027895                      1.76749286\n16:                           6.70620602                      3.66760111\n17:                           3.97555989                      4.26384098\n18:                           0.87155833                      0.62850083\n19:                          -5.29626776                     -3.56602318\n20:                           0.29132927                     -0.24094659\n21:                          -3.89880255                     -4.13958771\n22:                          -1.07376170                      1.04038517\n23:                          -3.15746725                     -0.86275384\n24:                           6.74251607                      5.20061095\n25:                          -0.70073716                     -0.40057533\n26:                          -2.67613820                     -4.21317726\n27:                           2.91805694                     -0.69013204\n28:                           1.21554998                      0.01257040\n29:                          -2.34441913                     -0.09520273\n30:                           0.80842206                     -0.59816156\n31:                           0.35814668                      0.18464470\n32:                          -4.95615164                     -3.41229866\n33:                           7.39895503                      9.54202027\n34:                          -0.42847012                      0.96729418\n35:                          -5.08535837                     -1.81147133\n36:                          -8.48566446                     -6.59707664\n37:                           7.11486574                      3.33309307\n38:                          -1.75266344                     -2.26638436\n39:                          -2.61773870                     -2.96871897\n40:                          -0.98472785                     -0.39358052\n41:                           0.38131643                     -0.18372041\n42:                           2.48839207                      0.12562249\n43:                          -0.78475397                     -0.90966645\n44:                          -1.78799736                     -2.01807229\n45:                           4.11617742                      1.70212477\n46:                           3.57095126                      4.52489373\n47:                           0.62785511                      0.71054523\n48:                          -0.06525192                     -1.87897355\n49:                           0.90499964                      0.64921194\n50:                          -5.12115139                     -2.82035654\n51:                           4.86159757                      4.15730067\n52:                          -4.45709282                     -2.88988685\n53:                          -1.31125431                     -2.19764758\n54:                          -1.06730176                     -0.55594875\n55:                          -4.33016390                     -2.41013522\n56:                           2.06934380                      0.49947511\n57:                          -2.33414735                      0.06027110\n58:                          -5.05223384                     -4.91206691\n59:                          -2.22198718                     -3.98151622\n60:                           6.47717074                      2.66414022\n61:                           7.41706933                      8.48371076\n62:                           3.47825429                      5.36900958\n63:                           0.29752155                      0.53902961\n64:                          -3.00756247                     -2.33722992\n65:                          -1.91369934                     -3.07304265\n66:                          -1.09753552                      0.83255769\n67:                          -5.38773668                     -1.39587046\n68:                          -1.05460893                      0.63227420\n69:                          -1.67861799                     -0.79900901\n70:                          -3.89615507                     -5.64139548\n71:                           5.61755313                      2.01696210\n    DNAmGrimAgeBasedOnPredictedAgeAdjAge DNAmGrimAgeBasedOnRealAgeAdjAge\n    DNAmTLAdjAge  DNAmAge DNAmAgeHannum DNAmPhenoAge DNAmAgeSkinBloodClock\n 1: -0.057522876 69.45051     50.966701   46.2273189              49.98080\n 2:  0.159432020 39.31947     19.723486   19.5949050              25.37817\n 3: -0.270863826 28.93844     15.997190   11.2333165              18.96990\n 4: -0.042641285 40.24814     29.103556   32.9465492              30.55982\n 5: -0.007357068 51.22517     37.969638   43.0609001              41.60176\n 6: -0.480951945 48.42306     43.414917   40.6248953              40.21595\n 7:  0.083893697 48.79652     31.997589   32.9568887              35.40943\n 8: -0.203400665 52.08132     37.745481   35.4962586              41.64016\n 9:  0.308553422 48.73270     30.897380   22.4495183              40.81504\n10:  0.026265724 52.56305     35.652483   31.8948682              36.35992\n11: -0.172490164 41.53539     33.993043   31.8804745              35.42870\n12: -0.041883429 33.26563     19.571151   13.9324386              23.91945\n13:  0.141096267 33.47744     10.032655    5.6706575              24.34612\n14: -0.056610840 55.93032     47.193419   37.2427791              52.63473\n15: -0.174480642 46.77600     34.019627   27.7494693              40.40561\n16: -0.052756663 56.63646     49.804843   47.8655971              51.65946\n17: -0.417772928 57.51839     40.416858   36.5345621              37.17050\n18:  0.016187891 50.12387     35.576073   30.5828379              35.20056\n19:  0.443416411 38.03486     18.712792    5.3600725              25.61077\n20:  0.055057284 56.64062     39.398553   34.3508657              43.10510\n21:  0.253427630 50.18390     25.454426   22.4217319              34.26514\n22: -0.044950181 35.80301     30.757923   23.9615663              28.74172\n23: -0.178965449 30.19100     20.299769   13.5102893              19.14225\n24:  0.113645078 53.57408     39.325200   39.5262199              46.53788\n25:  0.075075326 47.78798     37.840979   36.8850216              39.94769\n26:  0.253635220 47.22666     32.839064   27.8082524              43.73465\n27: -0.124085998 48.21921     33.158806   27.5309209              39.49820\n28:  0.009534083 39.74524     22.174235   14.9470323              28.30533\n29:  0.083194061 43.65950     32.615502   29.9656985              32.25937\n30:  0.037436207 52.66055     37.887204   31.7367628              46.32758\n31: -0.077477031 58.04480     44.744358   42.8019660              50.93454\n32:  0.294919746 43.05476     30.008749   26.5061809              35.21930\n33:  0.083781699 64.67271     48.285288   45.1516703              51.06206\n34:  0.220077882 42.53051     24.927745   23.8223533              26.13056\n35:  0.187717737 55.92246     38.712869   40.3192777              39.98586\n36:  0.177135352 45.66707     25.820381   22.3356914              35.61545\n37: -0.380294544 49.54783     32.728396   30.3094378              40.69984\n38:  0.099881573 47.19291     34.396419   23.6716000              41.21250\n39:  0.197980306 49.79659     35.631155   33.7716397              43.75525\n40: -0.004225652 52.91438     40.687413   35.1397718              43.22304\n41: -0.160774261 64.29737     39.148253   41.9033992              45.01979\n42: -0.369274746 48.07226     31.065840   23.7856431              30.10768\n43:  0.381284412 50.44910     29.307202   20.3842993              35.94884\n44: -0.137157886 59.15114     40.667008   38.9867020              45.43113\n45:  0.235186908 50.62513     26.713061   28.8362889              34.84681\n46:  0.313753528 42.42650     20.658281   17.3635761              29.61283\n47: -0.158899622 65.44245     46.742282   45.5719107              52.40018\n48: -0.185217722 48.14921     36.405676   30.2640515              45.09651\n49:  0.142779078 50.24346     36.360998   39.8829205              40.81166\n50:  0.100029180 45.93274     31.308856   21.5746690              34.97487\n51:  0.120598249 41.43912     23.549459   17.5694993              32.18979\n52:  0.112950740 39.46939     20.975654   16.0603913              28.65980\n53: -0.061365943 41.42590     30.221892   29.8893991              36.20032\n54: -0.265906491 55.67113     47.804133   38.4207220              47.07459\n55: -0.048404421 46.90856     36.362422   24.0627753              38.36225\n56: -0.349311764 53.96191     46.767415   44.5021054              47.51322\n57: -0.473148913 28.42348     31.355340   31.6717582              34.82938\n58:  0.071769333 51.23978     36.265239   32.0163078              46.71954\n59:  0.128756192 66.28037     47.188090   40.0895531              56.19494\n60: -0.405244893 44.16823     32.464490   27.5950171              35.15709\n61: -0.247558130 49.22511     40.747173   38.3766893              41.55222\n62:  0.167394087 59.42845     41.809459   41.8709321              44.93095\n63:  0.090789462 54.31947     34.681411   31.2636756              39.10696\n64:  0.093856623 45.99977     30.614496   20.7495013              34.71300\n65: -0.012583281 53.20147     43.384091   36.4087527              52.46657\n66: -0.117125994 49.90306     38.071147   31.5887473              35.55095\n67:  0.371998915 54.09054     39.809579   33.8734997              44.46142\n68:  0.245241885 22.90992      8.732278   -0.7900271              16.35929\n69:  0.075864650 43.74051     31.035636   26.1601521              31.59212\n70:  0.060979820 67.35567     60.626455   55.9568825              67.35537\n71: -0.253872425 44.88807     37.034427   30.6387383              44.14582\n    DNAmTLAdjAge  DNAmAge DNAmAgeHannum DNAmPhenoAge DNAmAgeSkinBloodClock\n    DNAmFitAge DNAmGrimAge2BasedOnPredictedAge DNAmGrimAge2BasedOnRealAge\n 1:         NA                        66.82403                   73.88595\n 2:         NA                        37.61554                   39.15601\n 3:         NA                        42.55991                   44.92780\n 4:         NA                        42.91021                   46.69416\n 5:         NA                        54.13522                   54.95675\n 6:         NA                        55.68796                   55.56107\n 7:         NA                        48.59422                   49.52876\n 8:         NA                        58.05925                   57.68313\n 9:         NA                        48.88618                   53.10772\n10:         NA                        45.79974                   46.76337\n11:         NA                        51.10992                   53.79580\n12:         NA                        36.31399                   38.71153\n13:         NA                        37.00216                   39.73657\n14:         NA                        58.36316                   57.99023\n15:         NA                        51.49553                   50.66966\n16:         NA                        63.07140                   62.68393\n17:         NA                        54.38530                   56.63534\n18:         NA                        49.16676                   50.81159\n19:         NA                        36.81974                   39.98619\n20:         NA                        52.46066                   54.16156\n21:         NA                        42.76577                   44.37264\n22:         NA                        46.28032                   49.95739\n23:         NA                        35.60318                   39.04492\n24:         NA                        60.93616                   61.79523\n25:         NA                        52.00271                   54.38365\n26:         NA                        48.52950                   49.27296\n27:         NA                        48.93805                   47.47023\n28:         NA                        42.25774                   42.66590\n29:         NA                        45.57549                   49.53597\n30:         NA                        53.89743                   54.88006\n31:         NA                        59.17185                   61.56052\n32:         NA                        42.90542                   46.30189\n33:         NA                        70.13184                   74.79580\n34:         NA                        43.82951                   46.69056\n35:         NA                        50.12719                   55.42348\n36:         NA                        41.85501                   45.60627\n37:         NA                        54.50603                   52.91973\n38:         NA                        47.26132                   48.89913\n39:         NA                        52.31802                   54.22448\n40:         NA                        54.25735                   57.06406\n41:         NA                        53.82199                   55.57302\n42:         NA                        44.18218                   43.53136\n43:         NA                        46.65714                   48.44986\n44:         NA                        53.27479                   55.37169\n45:         NA                        49.05589                   48.55834\n46:         NA                        47.56960                   50.14729\n47:         NA                        60.88639                   63.58903\n48:         NA                        52.99925                   53.53009\n49:         NA                        55.14090                   57.01422\n50:         NA                        45.15042                   49.27806\n51:         NA                        49.78368                   50.84727\n52:         NA                        40.74854                   43.88620\n53:         NA                        47.16426                   48.22167\n54:         NA                        58.44625                   61.34019\n55:         NA                        47.24062                   51.14065\n56:         NA                        57.52054                   58.39410\n57:         NA                        45.62391                   49.83703\n58:         NA                        52.10954                   54.62454\n59:         NA                        58.84404                   59.90461\n60:         NA                        50.34609                   48.49113\n61:         NA                        60.44141                   63.64227\n62:         NA                        61.73851                   65.89195\n63:         NA                        50.98331                   53.27068\n64:         NA                        43.45238                   45.97122\n65:         NA                        55.10121                   56.58973\n66:         NA                        48.56838                   52.35754\n67:         NA                        53.05766                   59.24964\n68:         NA                        31.86722                   34.59388\n69:         NA                        45.01831                   47.60817\n70:         NA                        66.47584                   68.02970\n71:         NA                        55.00069                   53.73991\n    DNAmFitAge DNAmGrimAge2BasedOnPredictedAge DNAmGrimAge2BasedOnRealAge\n    DNAmGrimAgeBasedOnPredictedAge DNAmGrimAgeBasedOnRealAge\n 1:                       62.27755                  70.01174\n 2:                       34.87894                  36.56606\n 3:                       37.39829                  39.99160\n 4:                       39.16873                  43.31290\n 5:                       50.01086                  50.91061\n 6:                       50.87031                  50.73135\n 7:                       45.69494                  46.71844\n 8:                       54.22997                  53.81804\n 9:                       46.35893                  50.98235\n10:                       41.42970                  42.48507\n11:                       46.11169                  49.05326\n12:                       30.90764                  33.53342\n13:                       32.34584                  35.34055\n14:                       55.56679                  55.15835\n15:                       49.23829                  48.33380\n16:                       59.85714                  59.43279\n17:                       49.89906                  52.36330\n18:                       44.62683                  46.42824\n19:                       33.39980                  36.86770\n20:                       49.82855                  51.69137\n21:                       39.13373                  40.89357\n22:                       40.51328                  44.54040\n23:                       31.20214                  34.97153\n24:                       57.72522                  58.66608\n25:                       47.39099                  49.99860\n26:                       46.13834                  46.95257\n27:                       45.95059                  44.34303\n28:                       38.46613                  38.91315\n29:                       42.13360                  46.47111\n30:                       51.79113                  52.86731\n31:                       56.40005                  59.01612\n32:                       40.96735                  44.68716\n33:                       66.33184                  71.43979\n34:                       38.26760                  41.40102\n35:                       46.62009                  52.42057\n36:                       38.16058                  42.26895\n37:                       50.87014                  49.13283\n38:                       46.33907                  48.13279\n39:                       47.64222                  49.73017\n40:                       49.99798                  53.07189\n41:                       51.36402                  53.28175\n42:                       39.73897                  39.02620\n43:                       43.69326                  45.65664\n44:                       49.91745                  52.21397\n45:                       44.98048                  44.43557\n46:                       44.43525                  47.25834\n47:                       58.11525                  61.07517\n48:                       49.47197                  50.05335\n49:                       48.99673                  51.04839\n50:                       41.52509                  46.04567\n51:                       45.72590                  46.89074\n52:                       36.40721                  39.84355\n53:                       42.44402                  43.60209\n54:                       52.80638                  55.97581\n55:                       44.48431                  48.75561\n56:                       53.77479                  54.73152\n57:                       44.31210                  48.92630\n58:                       48.09870                  50.85312\n59:                       55.98815                  57.14968\n60:                       45.89598                  43.86444\n61:                       57.67703                  61.18260\n62:                       57.35193                  61.90077\n63:                       47.66651                  50.17163\n64:                       41.47045                  44.22908\n65:                       54.12821                  55.75844\n66:                       45.54871                  49.69859\n67:                       50.65417                  57.43561\n68:                       30.41403                  33.40026\n69:                       40.63117                  43.46758\n70:                       62.98690                  64.68868\n71:                       52.26380                  50.88299\n    DNAmGrimAgeBasedOnPredictedAge DNAmGrimAgeBasedOnRealAge"
  },
  {
    "objectID": "standard.html",
    "href": "standard.html",
    "title": "Standard analysis",
    "section": "",
    "text": "There are 2 disease conditions AMN and cerebral (cALD for child cAMN for adults) and 2 age groups adults &gt;=18 & child &lt;18.\n\nsource(\"R/functions.R\")\nlibrary(data.table)\nss&lt;-readRDS(\"data/SS.rds\")\nss$age_grp &lt;- \"Adult\"\nss[Age &lt; 18, age_grp:=\"Child\"]\ntable(ss$age_grp,ss$Condition)\n\n       \n        AMN cALD cAMN CTL.adult CTL.child\n  Adult  52    0    8        12         0\n  Child   0   12    0         0        12\n\n\nThe main goal is to study adults and whether the relation between age and methylation is different between control and diseased AMN vs CTL.adult. A secondary analysis is the inclusion of child subjects, which can be included in the second part of the analysis."
  },
  {
    "objectID": "standard.html#workflow",
    "href": "standard.html#workflow",
    "title": "Standard analysis",
    "section": "Workflow:",
    "text": "Workflow:\nThe standard analysis has 3 steps:\n\n1.Pre-processing:\n\nBackground correction:\nData is cleaned and filtered before being analysed. The preprocessNoob function from minfi package is used to remove background noise. And a visual inspection of the data is done raw-qc\n\n\nData filtering:\nThe following filters are applied:\n\nProbes: Only probes with a detection p.value &lt; 0.01 for each sample are retained. (P-value calculated with minfi::detectionP())\nSample: Only samples with at least 90% of the probes are retained.\n\nAfter applying these filters one sample was discarded: lnf-21.5, CTL.adult, 44\n\nss &lt;- ss[Sample_Name != \"lnf-21.5\",]\n\n\n\n\n2.Differential analysis:\nOnce data is clean the diffrences in methylation between different groups is analysed using regression models. In this case we use the limma package and the\nfollowing models are tested:\n\nmodel 1:\nHere we used only adults and created a variable called Type , which contains 2 groups:\n\ndisease: merges AMN and cAMN together in a single group.\ncontrols: the adult controls.\n\n\ndtable(ss[age_grp==\"Adult\", .(Sample_Name,Type)])\n\n\n\n\n\n\n\ntable(ss[age_grp==\"Adult\", Type])\n\n\nControl Disease \n     11      60 \n\n\nFormula: meth ~ 0 + AMN_Type\nNo difference at probe-level or region level observed.\n\n\nmodel 2:\nHere we used all samples child and adults alike and created the Condition variable, which contain 5 groups formed by all the possible combinations of disease group and age:\n\nCTL.adult: Control samples for adults\nCTL.child: Control samples for childs\nAMN: Adults with the disease condition 1\ncAMN: Adults with the disease condition 1 & condition 2\ncALD: Children with the disease condition 2\n\n\ndtable(ss[, .(Sample_Name,Condition)])\n\n\n\n\n\n\n\ntable(ss[, Condition])\n\n\n      AMN      cALD      cAMN CTL.adult CTL.child \n       52        12         8        11        12 \n\n\nFormula: meth ~ 0 + Condition\nThis model was statistically significant for the contrast cALD-cAMN. at the probe level with 116 DMPs.\nNo difference at region level observed.\n\n\nmodel 3 = m2 + Age as a covariate\nFormula: meth ~ 0 + Condition + Age\nNo difference at probe-level or region level observed.\n\n\n\n3. Pathway analysis\nThere were only significant results for model 2 at individual probe level:\n\n\n\nPathway analysis from genes associated to DMPs in model 2."
  },
  {
    "objectID": "standard.html#discussion",
    "href": "standard.html#discussion",
    "title": "Standard analysis",
    "section": "Discussion",
    "text": "Discussion\nWe performed a Standard methylation analysis, following the usual workflow.\nFrom this analysis we only observed methylation differences between diseased childs, which show the cerebral condition and diseased adults without that condition. One of the factors that could explain those differences in methylation is age.\nThus, in order to adjust for age, the same analysis was repeated introducing the known biological age as a covariate in the linear model (m3) and no differences where observed.\nTo further study if there is an age-accelerating effect on the disease we propose:\n\nGenereate a regression model with age-corrected beta values, to remove the effect of age from the methylation values.\nLook for specific age signature in our data by predicting age-related sites within the controls and checking for enrichment of those sites in the disease.\nAnalysing previously reported age-related sites from literature.\n\nReproducing age-acceleration analysis from existing literature."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn this project we tried to answer the following questions:\n\nIs there an age-accelerating factor for XALD patients according to the changes in DNA methylation?\nWhich are the changes in DNA methylation associated with XALD disease?\n\nTo start with, we performed a conventional analysis following our standard workflow for differential methylation analysis ( data preprocessing, filtering, identification of differentially methylated Probes,DMPs, and Regions, DMRs, and pathway analysis of the associated genes) using different sets of parameters (pvalu, FDR, min. methylation difference). Due to the imbalanced study design with a much smaller group of control vs disease cases and we repeated the same analysis including additional control cases from public datasets (GEO).\n\nConventional analysis using standard pipline.\nConventional analysis including controls from GEO.\n\nFrom this first approach we could identify some enriched pathways with genes associated with DMPs (individual probes). Nevertheless, by adding age to the model as a covariate this differences where lost.\n\n\n\nPathway analysis from genes associated to DMPs in model 2.\n\n\nSince the results from this conventional analysis where not satisfying we then tryed some other analysis replicating existing literature on DNA methylation associated with age:\n\nChecking for age-related signatures following the workflow described in @Steegenga2014\n\nHere we saw some differences in methylation for our data for the set related with no change in gene expression.\n\nreadRDS(\"data/ztab.rds\")\n\n\n?(caption)\n\n\n\n              ref     model condition    N       p.value      Case       Ctl\n1          cgSetm residuals      cAMN 4556  0.000000e+00 0.5179677 0.4919976\n2        cgSet_NO residuals      cAMN 3956  0.000000e+00 0.5182289 0.4917175\n3         cgIn_NO residuals      cAMN  837  0.000000e+00 0.5238554 0.4841475\n4  cgIn_consensus residuals      cAMN 3826 4.611327e-290 0.5112390 0.4955195\n5       cgSet_pre residuals      cAMN 6878 2.209406e-268 0.5089070 0.4976330\n6          cgSetm residuals   Disease 4556 4.091372e-245 0.5014336 0.4919976\n7        cgSet_NO residuals   Disease 3956 1.265880e-228 0.5014942 0.4917175\n8         cgIn_NO residuals   Disease  837 8.489375e-176 0.5027597 0.4841475\n9        cgIn_top residuals      cAMN 4695 2.507026e-161 0.5082866 0.4977346\n10         cgSetm residuals       AMN 4556 1.790816e-129 0.4988899 0.4919976\n11       cgSet_NO residuals       AMN 3956 7.363714e-123 0.4989196 0.4917175\n12        cgIn_NO residuals       AMN  837 2.064456e-118 0.4995142 0.4841475\n13    cgSet_Exprs residuals      cAMN  638 1.656484e-100 0.5163686 0.4938602\n14       cgIn_pre residuals      cAMN 3011  4.104878e-70 0.5075933 0.4989758\n15 cgIn_consensus residuals   Disease 3826  8.610963e-67 0.5008364 0.4955195\n16      cgSet_pre residuals   Disease 6878  6.053748e-36 0.5005079 0.4976330\n17 cgIn_consensus residuals       AMN 3826  5.567936e-33 0.4992360 0.4955195\n18       cgIn_top residuals   Disease 4695  8.554518e-22 0.5004015 0.4977346\n19    cgSet_Exprs residuals   Disease  638  1.846942e-21 0.5010346 0.4938602\n20      cgSet_pre residuals       AMN 6878  8.462111e-12 0.4992157 0.4976330\n21    cgSet_Exprs residuals       AMN  638  2.462806e-10 0.4986755 0.4938602\n22       cgIn_top residuals       AMN 4695  2.176250e-07 0.4991884 0.4977346\n23       cgIn_pre residuals   Disease 3011  2.126750e-04 0.5002614 0.4989758\n24       cgIn_pre residuals       AMN 3011  6.526093e-01 0.4991334 0.4989758\n           diff\n1  0.0259701017\n2  0.0265114143\n3  0.0397079641\n4  0.0157194645\n5  0.0112740100\n6  0.0094359547\n7  0.0097766251\n8  0.0186122048\n9  0.0105519788\n10 0.0068922398\n11 0.0072020421\n12 0.0153667034\n13 0.0225083193\n14 0.0086175199\n15 0.0053169035\n16 0.0028748712\n17 0.0037165095\n18 0.0026668518\n19 0.0071743510\n20 0.0015826960\n21 0.0048152789\n22 0.0014537553\n23 0.0012856247\n24 0.0001576409\n\n\n\n\n4. Checking age acceleration as decribed by @Horvath2013\nWe identified a particular set of age-related genes that were differentially methylated for the XALD + cerebral condition in adult patients for specific sites that had been previously reported to be related with age.\nSee ?@tbl-adult_z-test_cov_model\n\nWe also identified the main pathways associated with the disease."
  },
  {
    "objectID": "signature.html",
    "href": "signature.html",
    "title": "age signature",
    "section": "",
    "text": "There are 2 ways in which we are going to check for the age signature of our controls.\n\n1.A: By checking if there are significant DMPs on our data comparing young and old controls (healthy samples)\n1.B: By subsetting the EPIC methylation array sites to those that have been previously reported to change methylation with age.\n\n\n\nTo answer question 1.B we are going to take as a reference the work made by Wilma, T. et al @Steegenga2014\nIn their paper they present 3 datasets: 1. cgSet_Exprs: The set of probes that come from observed changes in methylation AND in expression (398 genes) 2. cgSet_NO: The set of probes that come from observed changes in methylation BUT NOT expression (2390 genes) 3. cgSet_pre: The set of probes reported to be age-related on previous literature.\nAnd we created a new one combining 2 &3: 4. cgSetm: The combination/union of cgSet_Exprs & cgSet_NO\nSo let’s prepare our data replicating their workflow:\n\n\n450k array where pre-processed and cleaned and the old subjects where compared to the young subjects.\n20,917 were significantly regulated (Lima t test, p &lt; 0.01) between the group of old and young subjects. Over 5 % methylation difference between the mean of the group of the young and old subjects was found for 10,625. 7,598 gene-related and 3,027 intergenic probes. From the 7,598 gene-related 640 probes where further discarded because of pseudo- and uncharacterized genes, antisense RNAs, long intergenic nonprotein coding RNAs and micro-RNAs.\nFinally a clean set of 6958 probes where selected and the most significant differentially expressed genes were identified using −2 &gt; t value &gt; 2 as a cut-off. Fig 2A\n\n398 genes where selected as the most significant differentially expressed genes and 170 of those have at least 2 associated DMPs.\nThe following table corresponds to supplementary table 2 and contains the data they usedin the article.\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoaded data has been filtered out for single nucleotide polymorphism (SNP) at or near the target CpG with minor allele frequency equal or larger than 1 % and probes that contained more than 2 SNPs.\n\nlibrary(data.table)\nlibrary(targets)\nlibrary(SummarizedExperiment)\nlibrary(S4Vectors)\nss &lt;- readRDS(\"data/SS.rds\")\nss_ctl &lt;- ss[Type==\"Control\",]\n\n# rgSet &lt;- cnv.methyl::read.metharray.exp.par(targets=ss_ctl,ncores = 36,folder = \"analysis/intermediate/\")\nrgSet &lt;- minfi::read.metharray.exp(targets = ss_ctl)\n\nmset &lt;- name_rgset(rgSet,ss_ctl,exclude=\"206702460034_R05C01\",newname=\"Sample_Name\")\n\ncontrols&lt;-filter(                                         # 1.- Filters: -probes: pval&lt;0.01 \n    targets=ss_ctl, rgSet=mset,sampGroups=\"Sample_Group\", #              -samples: 10% probes fail\n    qc_folder = \"analysis/\")\nss_ctl &lt;- data.table::data.table(as.data.frame(controls@colData))\n\n\n\n\n\nidcol=\"Sample_Name\"\nctl_qc_dir=params$ctl_qc_dir\ndir.create(ctl_qc_dir,recursive = T, showWarnings = F)\ncontrols_qc &lt;- \nqc(                                                       # Makes qc plots:qcReport, density, beanplot, mean_qc \n    controls,sampGroups = \"Sample_Group\",sampNames=idcol,idcol=idcol, qc_folder = ctl_qc_dir\n    )\n\n\n\n\ndensity_plot\n\n\n\n\n\nbean_plot\n\n\nThere are 1.05^{6} probes that pass QC and 23 control samples in our dataset.\n\ntable(ss_ctl$Condition)\n\n\n      AMN      cALD      cAMN CTL.adult CTL.child \n        0         0         0        11        12 \n\n\n\n\n\nFollowing the aforementioned paper @Steegenga2014 we now normalize the data using the subset-quantile within array normalization (SWAN) method:\n\nlibrary(minfi)\nnorm&lt;-minfi::preprocessSWAN(controls)\n\n\n\n\n\nTo test the effect of age on our controls we will split our samples into adult +18 and young &lt;18 subjects. Then we will fit a model to compare the methylation levels of this 2 groups.\n\nmvals&lt;-getM(norm) \nfull_mod&lt;-mod(object = mvals, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_ctl,\n                        idcol=\"Sample_Name\")\nsaveRDS(full_mod,\"data/full_mod.rds\")\n\n\nsig_mod&lt;-full_mod[abs(full_mod$t)&gt;2 & full_mod$p.value &lt; 0.01 ,]\n\nsaveRDS(sig_mod,\"data/sig_mod.rds\")\n\n139531 were significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_mod,                         # Toptable & stats\n                                            ContrastsDM = colnames(sig_mod$contrasts),\n                                            beta_normalized = minfi::getBeta(controls),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(controls),\n                                            writeOut = F)\ndmps$Type&lt;-ifelse(dmps$diff_meanMeth&gt;0,\"Hyper\",\"Hypo\")\n\nFrom here we could extract our own group of DMPs comparing the two age groups from the contrasts.\n\nDMPs&lt;-data.table::as.data.table(dmps)\nDMPs&lt;-DMPs[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nDMPs[nchar(UCSC_RefGene_Name)&gt;1,]\nsaveRDS(DMPs,\"data/dmps.rds\")\n\nSo yes, there are actually 55501 DMPs.\n\n\nIn the following plots you can observe\n\nplotDMP(data.table::as.data.table(dmps))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow we already checked that there are methylation differences in our data by separating controls into young and old. Since our samples are only controls and the only controlled difference between them is age, this suggests that the observed methylation differences are related to that factor. Nevertheless, there could be other underlying variables affecting the methylation levels between the 2 conditions that we ignore.\nSo far, we followed the proceeding from the paper in our analysis in order to mimic their workflow so the results are comparable. Nevertheless, they also measured expression values, which they used to correlate with methylation levels in order to filter the gene candidates for their age-related profile. In our case, there is no expression, so we can’t construct a dataset of candidate genes taking into account gene expression. Eventhough, we can use the same datasets from their previous work on our data in order to see if the set with expression and without expression behave in a different way.\n\n\n\n\nAs mentioned previously, another way to find out if there is a change in methylation associated with aging in our data is looking at those sites that have been previously reported to show this association. We will use the PBMC reference datasets (with/without expression change) plus the one from previous literature that is also mentioned in the paper from @Steegenga2014:\n\n\n\nlibrary(readxl)\npaper_betas &lt;- suppressMessages( readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 2S\", skip = 2))\npaper_betas2 &lt;- suppressMessages(readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 3S\", skip = 2))\npaper_betas3 &lt;- suppressMessages(readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 4S\", skip = 6))\n\n\n\n\nThere are 4 reference probelists:\n\ncgSet_Exprs: The set of probes that come from observed changes in methylation BUT NOT in expression (398 genes)\ncgSet_NO: The set of probes that come from observed changes in methylation AND expression (2390 genes)\ncgSetm: The combination/union of cgSet_Exprs & cgSet_NO\ncgSet_pre: The set of probes reported to be age-related on previous literature.\n\n\nprobelist &lt;- list(\n  cgSet_Exprs = paper_betas$ProbeID,\n  cgSet_NO = paper_betas2$ProbeID,\n  cgSetm = unique(c(paper_betas$ProbeID,paper_betas2$ProbeID)),\n  cgSet_pre = paper_betas3$`Probe nr`\n\n)\nsaveRDS(probelist,\"data/probelist.rds\")\n\n\n\n\nWe have 2 models, the full model, which has all the probes from the normalised data in it full_mod and the same model which has been filtered according to the same criteria as in the paper sig_mod (0.01 pval & +-2t) to keep only sites with a significant change in methylation.\nSo, as we saw in 1A we get a set of +50K DMPs, following the steps described in the paper to construct a new reference dataset from our data (excluding the part where data is crossed with expression).\nWe believe those sites are related to age because the model was built comparing old vs young healthy subjects, but there might be other factors affecting the differences in methylation, there are 2 solutions we propose:\n\nsig_mod: We could either intersect our significant probes 139531 with the sites that have been previously reported to be related with age.\nfull_mod: Test the whole reference datasets on our data.\n\nsig_mod may offer better results, since it is based on the differences present in our own data, but for the same reason it could also introduce bias.\nLet’s take a look at the sample size of each of the age_profile datasets. (4 references x 2 models = 8 datasets):\n\ndataset: The name of the reference dataset used\nN_Age_ref: Total size of the reference dataset\nN_tested: The subset of probes from each reference dataset that we tested (are present in our chip and have not been discarded in QC steps)\nN_DMPs: Number of probes that are significantlly methylated between the 2 groups that are also present in each of the age reference subset.\nobserved: Number of DMPs with percentajes relative to reference datasets.\nexpected: Expected number of DMPs + percentage of DMPs (N_DMPs/N_total)\n\n\nlibrary(data.table)\ntab &lt;- t(sapply(probelist,function(x) table(rownames(full_mod) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_mod) %in% x)))\ndtab&lt;-data.table::data.table(\n  dataset = c(rownames(tab)),\n  N_Age_ref = sapply(probelist,NROW),\n  N_tested = paste0(tab[,2], \" (\",round(tab[,2]/sapply(probelist,NROW)*100,2), \"%)\"),\n  N_DMPs = tab2[,2]\n  \n)\ndtab[,observed:=paste0(N_DMPs, \"/\", tab[,2], \" (\",round((N_DMPs/tab[,2])*100,2), \"%)\"  )]\ndtab[, expected:=paste0( round(tab[,2] * round( NROW(sig_mod$coefficients)/NROW(full_mod$coefficients) *100,2)/100),\" (\",round( NROW(sig_mod$coefficients)/NROW(full_mod$coefficients) *100,2),\"%)\")]\n\n\ndtab\n\n\n\n Table 1.1:  Enrichment of each age-related reference set in the age control\nmodel \n  \n\n\n\n\nSince the reference datasets have been previously reported to be associated with age, they can be used to filter the significant sites from our model to select those with further evidence to be related with ageing. In the table above we can observe that there is a good proportion of DMPs in the 2 age groups from the controls associated with these age-related references. After data preprocessing around 90% of the cgs for each reference set is present in our data, which we consider is a fair representation. Our significant dataset captures more than 30% of the probes for each reference dataset, while if you look at all the different probes from the array, the overall percentage of DMPs between young and adults is 16.14% which suggests that there is some overlap between previously reported age-related sites and DMPs between young and adult controls from our study. Nevertheless, it is also advisable to include the full reference sets in further analysis.\nTo analyse DMPs in age-related sites in the disease, we will use a combination of these reference sets, as well as sub-samples corresponding to the intersections between DMPs from our controls and the reference sets. For more about inhouse reference datasets Section 1.5 .\n\n\n\nWe can now construct each of the 8 datasets with mean beta values for young/adult groups:\n\nbetas &lt;- minfi::getBeta(controls)\n\n# Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\ndesign_FULL &lt;- t(full_mod$design)\n# For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\nbetas_c_FULL &lt;-apply(design_FULL , 1 , function(x) apply(betas[,ss_ctl$Sample_Name] %*% diag(x),1 , function(y) mean(y[y!=0])))\n\nbetas_c &lt;- lapply(list(full_mod,sig_mod),function(fit){\n  # Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\n  design &lt;- t(fit$design)\n  \n  dt_c&lt;-rbindlist(lapply(names(probelist), function(n){\n    idx&lt;-intersect(probelist[[n]],rownames(fit))\n    cgs&lt;-intersect(idx,rownames(betas))\n    b &lt;- betas[cgs,]\n    # For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\n    dt=as.data.table(apply(design , 1 , function(x) apply(b %*% diag(x),1 , function(y) mean(y[y!=0]))))\n    dt$ref=n\n    dt$cg=cgs\n    dt\n    } \n  ))\n  dt_c\n})\nnames(betas_c)&lt;- c(\"full_mod\",\"sig_mod\")\npdata&lt;-rbindlist(betas_c,idcol = \"model\")\nnames(pdata)[2:3]&lt;-c(\"adult\",\"child\")\npdata[,diff:=adult-child]\npdata&lt;-pdata[!is.na(diff),]\npdata[,type:=ifelse(diff&gt;0,\"hyper\",\"hypo\")]\n\nWe are ready to test mean differences and plot:\n\n\n\nAppart from a quantitative approach in order to measure at which extent each reference set is related to our data, a more qualitative measure can be obtained, based on statitics. Also, these test will tell us at which extent the differences in methylation between young and adults are significant for each of the reference sets. Imagine for example, that our data has a smaller percentage of DMPs in reference set A than in set B, but the difference in methylation for sites in A are much greater than those in B. This is the kind of qualitative measurement that the statistical test will tell us.\nMethylation data is bimodal, since the effects of methylation can either occur by hyper or hypomethylation. This means the data is not going to show a normal distribution. Thus, a wilcoxon non-parametric test is used to compare the means .\n\nt &lt;- pdata[,wilcox.test(child,adult)$p.value,by=c(\"ref\",\"model\")]\nt\n\n\n\n Table 1.2:  Young vs Adult Controls methylation distributions significance\ntest. \n  \n\n\n\n\nAlso a bimodal distribution could be transformed in 2 normal distributions if we split data into hyper and hypomethylated probes.\n\npdata[,sd.child:=sd(child),by=type]\npdata[,sd.adult:=sd(adult),by=type]\nz_bimodal &lt;- pdata[,c(N=.N,BSDA::z.test(child,adult,sigma.x=unique(sd.child),sigma.y=unique(sd.adult))),by=c(\"model\",\"ref\",\"type\")]\n# t_bimodal &lt;- pdata[,t.test(child,adult),by=c(\"ref\",\"model\",\"type\")]\nz_bimodal[,group:=rep(c(\"child\",\"adult\"),.N/2)]\nzt&lt;- dcast(z_bimodal, ref + model + type + N + p.value ~ group, value.var = c(\"estimate\"))\nzt[,diff:=adult-child]\ndata.table::setorder(zt,p.value,diff)\nkableExtra::kbl(zt)|&gt;kableExtra::kable_classic_2()\n\n\n\nTable 1.3: Young vs Adult Controls methylation distributions significance test.\n\n\nref\nmodel\ntype\nN\np.value\nadult\nchild\ndiff\n\n\n\n\ncgSet_pre\nfull_mod\nhypo\n5194\n0.00\n0.43\n0.49\n-0.06\n\n\ncgSet_pre\nsig_mod\nhypo\n2946\n0.00\n0.43\n0.51\n-0.08\n\n\ncgSetm\nfull_mod\nhyper\n3290\n0.00\n0.22\n0.18\n0.04\n\n\ncgSet_NO\nfull_mod\nhyper\n2897\n0.00\n0.22\n0.18\n0.04\n\n\ncgSetm\nsig_mod\nhyper\n1471\n0.00\n0.19\n0.13\n0.05\n\n\ncgSet_NO\nsig_mod\nhyper\n1308\n0.00\n0.19\n0.13\n0.06\n\n\ncgSet_pre\nsig_mod\nhyper\n894\n0.00\n0.31\n0.25\n0.06\n\n\ncgSet_pre\nfull_mod\nhyper\n1824\n0.00\n0.32\n0.28\n0.04\n\n\ncgSetm\nfull_mod\nhypo\n1400\n0.00\n0.49\n0.53\n-0.04\n\n\ncgSet_NO\nfull_mod\nhypo\n1184\n0.00\n0.49\n0.53\n-0.04\n\n\ncgSetm\nsig_mod\nhypo\n292\n0.00\n0.47\n0.53\n-0.07\n\n\ncgSet_NO\nsig_mod\nhypo\n247\n0.00\n0.47\n0.54\n-0.07\n\n\ncgSet_Exprs\nfull_mod\nhyper\n418\n0.00\n0.23\n0.19\n0.04\n\n\ncgSet_Exprs\nsig_mod\nhyper\n175\n0.00\n0.19\n0.13\n0.05\n\n\ncgSet_Exprs\nfull_mod\nhypo\n230\n0.04\n0.47\n0.50\n-0.03\n\n\ncgSet_Exprs\nsig_mod\nhypo\n48\n0.06\n0.46\n0.52\n-0.07\n\n\n\n\n\n\n\n# kableExtra::kbl(z_bimodal[,.SD,.SDcols=c(\"ref\",\"model\",\"type\",\"estimate\",\"conf.int\",\"p.value\")],digits=2) |&gt; kableExtra::kable_classic()\n\nIn this second statistical test, instead of comparing the distribution of the two groups we are splitting the data into hyper and hypomethylation, so it adds a new layer of information. The data in the table is sorted by p.value, so it shows the most significant first, but there is the estimate mean difference too.\nThe results show that there are significant differences.\nDataset means are all significantlly diferent (either with wilcoxon or student t test). For cgSet_pre from the literature there is a decrease in methylation with age. There is an increase in methylation for the cgSet_NO dataset (without expression) and less differences for those sites correlated with expression changes.\n\n\n\n\np_long&lt;-melt(pdata, measure.vars=c(\"adult\",\"child\") )\np_long[,color:=ifelse(type  == \"hyper\",\"red\",\"green\")]\n\nlibrary(ggplot2)\nlibrary(viridis)\n\nWarning: package 'viridis' was built under R version 4.3.0\n\n\nLoading required package: viridisLite\n\n  p1&lt;-ggplot(p_long, aes(x=variable, y=value, fill= variable)) +\n     geom_boxplot(aes(fill=variable),outlier.fill=\"ivory\",alpha = 0.5) +\n      # scale_fill_manual(ys=levels(col_subclass)) +\n      geom_jitter(color=p_long$color,\n                  size=0.1,show.legend = TRUE,\n                  alpha=0.2) +\n\n      #theme_ipsum() +\n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta ys between young and old\") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n    \n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 4)\n  \n   \np2&lt;-ggplot(p_long[ref!=\"cgSetm\",], aes(x=variable, y=value, fill= variable)) +\n     geom_boxplot(aes(fill=variable),outlier.fill=\"ivory\",alpha = 0.5) +\n      # scale_fill_manual(ys=levels(col_subclass)) +\n      # geom_jitter(#color=pdata$color,\n      #             size=0.1,show.legend = TRUE,\n      #             alpha=0.2) +\n\n      #theme_ipsum() +\n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta ys between young and old\") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n    \n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 2)\np2\n\n\n\n\n\n\n\n\nSince we suspect that our disease is related to accelarated aging but we don’t really know if one reference data is going to be better than the other for our disease, we created a combination of reference sets that try to capture as much variability as posible. This sets start with the prefix cgIn_ to differenciate them from the previous cgSet_.\nWe will also inspect which pathways are realted to each of these sets.\n\npathways_refsets&lt;-list()\n\nIn order to analyse which pathways are associated to the DMPs, we will first annotate the probes with gene names. To do that we will use the convinient annotation provided by illumina plataform for their EPIC methylation arrays.\n\nlibrary(data.table)\nlibrary(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)\n\n# 1. Get gene names from EPIC annotation object\nEPIC_anno&lt;-data.table::as.data.table(as.data.frame(IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other),keep.rownames = \"cg\")\ndata.table::setkey(EPIC_anno,cg)\n\n# 2. Filter for significant probes and absolute mean difference of beta values &gt; 0.05 \ndt_path&lt;-p_long[model==\"sig_mod\"&abs(diff)&gt;0.05,.SD,.SDcols=c(\"ref\",\"cg\",\"type\",\"diff\")]\n\n# 3. add gene name information to our data.table\ndata.table::setkey(dt_path,cg)\ndt_path$gene_name &lt;- EPIC_anno[dt_path$cg,UCSC_RefGene_Name]\ndt_path$Contrast=\"controls\"\n\n\nhead(dt_path)\n\n\n\n  \n\n\n\n\n\nThe consensus set by merging all reference sets and selecting significant probes in our model.\n\nprobelist$cgIn_consensus &lt;- unique(dt_path$cg)#intersect(row.names(sig_mod), unique(unlist(probelist)))\n\nNow we will look at the associated pathways to that reference set:\n\nsource(\"R/functions.R\")\n# Crete a list to store pathways results:\ncgIn_consensus&lt;-list()\n\n# Subset annotation to the corresponding probeset:\nanno&lt;-dt_path[probelist$cgIn_consensus,]\n\n# Get hypomethylated genes list: \ngenes.hypo &lt;- unique(unlist(sapply(\n  anno[type==\"hypo\",gene_name]\n  ,function(x)unlist(strsplit(x,\";\")))))\n\n# Get pathways associated with the previous set:\npathways.hypo &lt;- gprofiler2::gost(signif = T ,genes.hypo)\n\n# Clean results:\ndth&lt;- data.table::as.data.table(pathways.hypo[[1]])\ndth[,FDR:=p_value]\ndth[,Contrast:=\"controls\"]\ndth[,TERM:=term_name]\ndth[,source:=factor(source)]\n\npathway&lt;-path_results(dth,method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\n\n# Store results \ncgIn_consensus$hypo &lt;- pathway\n\n# Repeat for hypermethylated genes: \n\ngenes.hyper &lt;- unique(unlist(sapply(\n  anno[type==\"hyper\",gene_name]\n  ,function(x)unlist(strsplit(x,\";\")))))\npathways.hyper &lt;- gprofiler2::gost(signif = T ,genes.hyper)\n\n# Store results \ndth&lt;- data.table::as.data.table(pathways.hyper[[1]])\ndth[,FDR:=p_value]\ndth[,Contrast:=\"controls\"]\ndth[,TERM:=term_name]\ndth[,source:=factor(source)]\npathway&lt;-path_results(dth,method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\n\ncgIn_consensus$hyper&lt;-pathway\npathways_refsets[[\"cgIn_consensus\"]]&lt;-cgIn_consensus\n\n\n\n\ndtable(pathways_refsets$cgIn_consensus$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_consensus$hypo)\n\n\n\n\n\n\n\n\n\n\nSelect the top significant probes in our model. We will use limma’s topTable function to get the top 5000 most significant probes.\n\nprobelist$cgIn_top &lt;- rownames(limma::topTable(sig_mod,number=5000))\n\nFor convinience the chunk of code above has been converted to a function:\n\npathways_refsets[[\"cgIn_top\"]]&lt;-get_pathway(probeIDs = probelist$cgIn_top,dt=dt_path)\n\n\n\n\ndtable(pathways_refsets$cgIn_top$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_top$hypo)\n\n\n\n\n\n\n\n\n\n\nFrom all the reference datasets in the paper, cgSet_pre contains more DMPs in our data than any other.\n\nprobelist$cgIn_pre &lt;- dt_path[ref==\"cgSet_pre\",cg]\n\n\npathways_refsets[[\"cgIn_pre\"]]&lt;-get_pathway(probelist$cgIn_pre,dt=dt_path)\n\n\n\n\ndtable(pathways_refsets$cgIn_pre$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_pre$hypo)\n\n\n\n\n\n\n\n\n\n\nAlthough it has less %DMPs than When we perform the t-test the dataset from PBMC cell line without changes in expression has a lower p-value.\n\nprobelist$cgIn_NO &lt;- dt_path[ref==\"cgSet_NO\",cg]\n\n\npathways_refsets[[\"cgIn_NO\"]]&lt;-get_pathway(probelist$cgIn_NO,dt=dt_path)\n\n\n\n\ndtable(pathways_refsets$cgIn_NO$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_NO$hypo)"
  },
  {
    "objectID": "signature.html#sec-PBMC",
    "href": "signature.html#sec-PBMC",
    "title": "age signature",
    "section": "",
    "text": "To answer question 1.B we are going to take as a reference the work made by Wilma, T. et al @Steegenga2014\nIn their paper they present 3 datasets: 1. cgSet_Exprs: The set of probes that come from observed changes in methylation AND in expression (398 genes) 2. cgSet_NO: The set of probes that come from observed changes in methylation BUT NOT expression (2390 genes) 3. cgSet_pre: The set of probes reported to be age-related on previous literature.\nAnd we created a new one combining 2 &3: 4. cgSetm: The combination/union of cgSet_Exprs & cgSet_NO\nSo let’s prepare our data replicating their workflow:\n\n\n450k array where pre-processed and cleaned and the old subjects where compared to the young subjects.\n20,917 were significantly regulated (Lima t test, p &lt; 0.01) between the group of old and young subjects. Over 5 % methylation difference between the mean of the group of the young and old subjects was found for 10,625. 7,598 gene-related and 3,027 intergenic probes. From the 7,598 gene-related 640 probes where further discarded because of pseudo- and uncharacterized genes, antisense RNAs, long intergenic nonprotein coding RNAs and micro-RNAs.\nFinally a clean set of 6958 probes where selected and the most significant differentially expressed genes were identified using −2 &gt; t value &gt; 2 as a cut-off. Fig 2A\n\n398 genes where selected as the most significant differentially expressed genes and 170 of those have at least 2 associated DMPs.\nThe following table corresponds to supplementary table 2 and contains the data they usedin the article."
  },
  {
    "objectID": "signature.html#inhouse-data",
    "href": "signature.html#inhouse-data",
    "title": "age signature",
    "section": "",
    "text": "Loaded data has been filtered out for single nucleotide polymorphism (SNP) at or near the target CpG with minor allele frequency equal or larger than 1 % and probes that contained more than 2 SNPs.\n\nlibrary(data.table)\nlibrary(targets)\nlibrary(SummarizedExperiment)\nlibrary(S4Vectors)\nss &lt;- readRDS(\"data/SS.rds\")\nss_ctl &lt;- ss[Type==\"Control\",]\n\n# rgSet &lt;- cnv.methyl::read.metharray.exp.par(targets=ss_ctl,ncores = 36,folder = \"analysis/intermediate/\")\nrgSet &lt;- minfi::read.metharray.exp(targets = ss_ctl)\n\nmset &lt;- name_rgset(rgSet,ss_ctl,exclude=\"206702460034_R05C01\",newname=\"Sample_Name\")\n\ncontrols&lt;-filter(                                         # 1.- Filters: -probes: pval&lt;0.01 \n    targets=ss_ctl, rgSet=mset,sampGroups=\"Sample_Group\", #              -samples: 10% probes fail\n    qc_folder = \"analysis/\")\nss_ctl &lt;- data.table::data.table(as.data.frame(controls@colData))\n\n\n\n\n\nidcol=\"Sample_Name\"\nctl_qc_dir=params$ctl_qc_dir\ndir.create(ctl_qc_dir,recursive = T, showWarnings = F)\ncontrols_qc &lt;- \nqc(                                                       # Makes qc plots:qcReport, density, beanplot, mean_qc \n    controls,sampGroups = \"Sample_Group\",sampNames=idcol,idcol=idcol, qc_folder = ctl_qc_dir\n    )\n\n\n\n\ndensity_plot\n\n\n\n\n\nbean_plot\n\n\nThere are 1.05^{6} probes that pass QC and 23 control samples in our dataset.\n\ntable(ss_ctl$Condition)\n\n\n      AMN      cALD      cAMN CTL.adult CTL.child \n        0         0         0        11        12 \n\n\n\n\n\nFollowing the aforementioned paper @Steegenga2014 we now normalize the data using the subset-quantile within array normalization (SWAN) method:\n\nlibrary(minfi)\nnorm&lt;-minfi::preprocessSWAN(controls)"
  },
  {
    "objectID": "signature.html#sec-controls",
    "href": "signature.html#sec-controls",
    "title": "age signature",
    "section": "",
    "text": "To test the effect of age on our controls we will split our samples into adult +18 and young &lt;18 subjects. Then we will fit a model to compare the methylation levels of this 2 groups.\n\nmvals&lt;-getM(norm) \nfull_mod&lt;-mod(object = mvals, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_ctl,\n                        idcol=\"Sample_Name\")\nsaveRDS(full_mod,\"data/full_mod.rds\")\n\n\nsig_mod&lt;-full_mod[abs(full_mod$t)&gt;2 & full_mod$p.value &lt; 0.01 ,]\n\nsaveRDS(sig_mod,\"data/sig_mod.rds\")\n\n139531 were significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_mod,                         # Toptable & stats\n                                            ContrastsDM = colnames(sig_mod$contrasts),\n                                            beta_normalized = minfi::getBeta(controls),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(controls),\n                                            writeOut = F)\ndmps$Type&lt;-ifelse(dmps$diff_meanMeth&gt;0,\"Hyper\",\"Hypo\")\n\nFrom here we could extract our own group of DMPs comparing the two age groups from the contrasts.\n\nDMPs&lt;-data.table::as.data.table(dmps)\nDMPs&lt;-DMPs[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nDMPs[nchar(UCSC_RefGene_Name)&gt;1,]\nsaveRDS(DMPs,\"data/dmps.rds\")\n\nSo yes, there are actually 55501 DMPs.\n\n\nIn the following plots you can observe\n\nplotDMP(data.table::as.data.table(dmps))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNow we already checked that there are methylation differences in our data by separating controls into young and old. Since our samples are only controls and the only controlled difference between them is age, this suggests that the observed methylation differences are related to that factor. Nevertheless, there could be other underlying variables affecting the methylation levels between the 2 conditions that we ignore.\nSo far, we followed the proceeding from the paper in our analysis in order to mimic their workflow so the results are comparable. Nevertheless, they also measured expression values, which they used to correlate with methylation levels in order to filter the gene candidates for their age-related profile. In our case, there is no expression, so we can’t construct a dataset of candidate genes taking into account gene expression. Eventhough, we can use the same datasets from their previous work on our data in order to see if the set with expression and without expression behave in a different way."
  },
  {
    "objectID": "signature.html#b-intersection-with-reference-datasets",
    "href": "signature.html#b-intersection-with-reference-datasets",
    "title": "age signature",
    "section": "",
    "text": "As mentioned previously, another way to find out if there is a change in methylation associated with aging in our data is looking at those sites that have been previously reported to show this association. We will use the PBMC reference datasets (with/without expression change) plus the one from previous literature that is also mentioned in the paper from @Steegenga2014:\n\n\n\nlibrary(readxl)\npaper_betas &lt;- suppressMessages( readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 2S\", skip = 2))\npaper_betas2 &lt;- suppressMessages(readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 3S\", skip = 2))\npaper_betas3 &lt;- suppressMessages(readxl::read_excel(\"data/11357_2014_9648_MOESM2_ESM.xls\", \n    sheet = \"sTable 4S\", skip = 6))\n\n\n\n\nThere are 4 reference probelists:\n\ncgSet_Exprs: The set of probes that come from observed changes in methylation BUT NOT in expression (398 genes)\ncgSet_NO: The set of probes that come from observed changes in methylation AND expression (2390 genes)\ncgSetm: The combination/union of cgSet_Exprs & cgSet_NO\ncgSet_pre: The set of probes reported to be age-related on previous literature.\n\n\nprobelist &lt;- list(\n  cgSet_Exprs = paper_betas$ProbeID,\n  cgSet_NO = paper_betas2$ProbeID,\n  cgSetm = unique(c(paper_betas$ProbeID,paper_betas2$ProbeID)),\n  cgSet_pre = paper_betas3$`Probe nr`\n\n)\nsaveRDS(probelist,\"data/probelist.rds\")\n\n\n\n\nWe have 2 models, the full model, which has all the probes from the normalised data in it full_mod and the same model which has been filtered according to the same criteria as in the paper sig_mod (0.01 pval & +-2t) to keep only sites with a significant change in methylation.\nSo, as we saw in 1A we get a set of +50K DMPs, following the steps described in the paper to construct a new reference dataset from our data (excluding the part where data is crossed with expression).\nWe believe those sites are related to age because the model was built comparing old vs young healthy subjects, but there might be other factors affecting the differences in methylation, there are 2 solutions we propose:\n\nsig_mod: We could either intersect our significant probes 139531 with the sites that have been previously reported to be related with age.\nfull_mod: Test the whole reference datasets on our data.\n\nsig_mod may offer better results, since it is based on the differences present in our own data, but for the same reason it could also introduce bias.\nLet’s take a look at the sample size of each of the age_profile datasets. (4 references x 2 models = 8 datasets):\n\ndataset: The name of the reference dataset used\nN_Age_ref: Total size of the reference dataset\nN_tested: The subset of probes from each reference dataset that we tested (are present in our chip and have not been discarded in QC steps)\nN_DMPs: Number of probes that are significantlly methylated between the 2 groups that are also present in each of the age reference subset.\nobserved: Number of DMPs with percentajes relative to reference datasets.\nexpected: Expected number of DMPs + percentage of DMPs (N_DMPs/N_total)\n\n\nlibrary(data.table)\ntab &lt;- t(sapply(probelist,function(x) table(rownames(full_mod) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_mod) %in% x)))\ndtab&lt;-data.table::data.table(\n  dataset = c(rownames(tab)),\n  N_Age_ref = sapply(probelist,NROW),\n  N_tested = paste0(tab[,2], \" (\",round(tab[,2]/sapply(probelist,NROW)*100,2), \"%)\"),\n  N_DMPs = tab2[,2]\n  \n)\ndtab[,observed:=paste0(N_DMPs, \"/\", tab[,2], \" (\",round((N_DMPs/tab[,2])*100,2), \"%)\"  )]\ndtab[, expected:=paste0( round(tab[,2] * round( NROW(sig_mod$coefficients)/NROW(full_mod$coefficients) *100,2)/100),\" (\",round( NROW(sig_mod$coefficients)/NROW(full_mod$coefficients) *100,2),\"%)\")]\n\n\ndtab\n\n\n\n Table 1.1:  Enrichment of each age-related reference set in the age control\nmodel \n  \n\n\n\n\nSince the reference datasets have been previously reported to be associated with age, they can be used to filter the significant sites from our model to select those with further evidence to be related with ageing. In the table above we can observe that there is a good proportion of DMPs in the 2 age groups from the controls associated with these age-related references. After data preprocessing around 90% of the cgs for each reference set is present in our data, which we consider is a fair representation. Our significant dataset captures more than 30% of the probes for each reference dataset, while if you look at all the different probes from the array, the overall percentage of DMPs between young and adults is 16.14% which suggests that there is some overlap between previously reported age-related sites and DMPs between young and adult controls from our study. Nevertheless, it is also advisable to include the full reference sets in further analysis.\nTo analyse DMPs in age-related sites in the disease, we will use a combination of these reference sets, as well as sub-samples corresponding to the intersections between DMPs from our controls and the reference sets. For more about inhouse reference datasets Section 1.5 .\n\n\n\nWe can now construct each of the 8 datasets with mean beta values for young/adult groups:\n\nbetas &lt;- minfi::getBeta(controls)\n\n# Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\ndesign_FULL &lt;- t(full_mod$design)\n# For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\nbetas_c_FULL &lt;-apply(design_FULL , 1 , function(x) apply(betas[,ss_ctl$Sample_Name] %*% diag(x),1 , function(y) mean(y[y!=0])))\n\nbetas_c &lt;- lapply(list(full_mod,sig_mod),function(fit){\n  # Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\n  design &lt;- t(fit$design)\n  \n  dt_c&lt;-rbindlist(lapply(names(probelist), function(n){\n    idx&lt;-intersect(probelist[[n]],rownames(fit))\n    cgs&lt;-intersect(idx,rownames(betas))\n    b &lt;- betas[cgs,]\n    # For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\n    dt=as.data.table(apply(design , 1 , function(x) apply(b %*% diag(x),1 , function(y) mean(y[y!=0]))))\n    dt$ref=n\n    dt$cg=cgs\n    dt\n    } \n  ))\n  dt_c\n})\nnames(betas_c)&lt;- c(\"full_mod\",\"sig_mod\")\npdata&lt;-rbindlist(betas_c,idcol = \"model\")\nnames(pdata)[2:3]&lt;-c(\"adult\",\"child\")\npdata[,diff:=adult-child]\npdata&lt;-pdata[!is.na(diff),]\npdata[,type:=ifelse(diff&gt;0,\"hyper\",\"hypo\")]\n\nWe are ready to test mean differences and plot:\n\n\n\nAppart from a quantitative approach in order to measure at which extent each reference set is related to our data, a more qualitative measure can be obtained, based on statitics. Also, these test will tell us at which extent the differences in methylation between young and adults are significant for each of the reference sets. Imagine for example, that our data has a smaller percentage of DMPs in reference set A than in set B, but the difference in methylation for sites in A are much greater than those in B. This is the kind of qualitative measurement that the statistical test will tell us.\nMethylation data is bimodal, since the effects of methylation can either occur by hyper or hypomethylation. This means the data is not going to show a normal distribution. Thus, a wilcoxon non-parametric test is used to compare the means .\n\nt &lt;- pdata[,wilcox.test(child,adult)$p.value,by=c(\"ref\",\"model\")]\nt\n\n\n\n Table 1.2:  Young vs Adult Controls methylation distributions significance\ntest. \n  \n\n\n\n\nAlso a bimodal distribution could be transformed in 2 normal distributions if we split data into hyper and hypomethylated probes.\n\npdata[,sd.child:=sd(child),by=type]\npdata[,sd.adult:=sd(adult),by=type]\nz_bimodal &lt;- pdata[,c(N=.N,BSDA::z.test(child,adult,sigma.x=unique(sd.child),sigma.y=unique(sd.adult))),by=c(\"model\",\"ref\",\"type\")]\n# t_bimodal &lt;- pdata[,t.test(child,adult),by=c(\"ref\",\"model\",\"type\")]\nz_bimodal[,group:=rep(c(\"child\",\"adult\"),.N/2)]\nzt&lt;- dcast(z_bimodal, ref + model + type + N + p.value ~ group, value.var = c(\"estimate\"))\nzt[,diff:=adult-child]\ndata.table::setorder(zt,p.value,diff)\nkableExtra::kbl(zt)|&gt;kableExtra::kable_classic_2()\n\n\n\nTable 1.3: Young vs Adult Controls methylation distributions significance test.\n\n\nref\nmodel\ntype\nN\np.value\nadult\nchild\ndiff\n\n\n\n\ncgSet_pre\nfull_mod\nhypo\n5194\n0.00\n0.43\n0.49\n-0.06\n\n\ncgSet_pre\nsig_mod\nhypo\n2946\n0.00\n0.43\n0.51\n-0.08\n\n\ncgSetm\nfull_mod\nhyper\n3290\n0.00\n0.22\n0.18\n0.04\n\n\ncgSet_NO\nfull_mod\nhyper\n2897\n0.00\n0.22\n0.18\n0.04\n\n\ncgSetm\nsig_mod\nhyper\n1471\n0.00\n0.19\n0.13\n0.05\n\n\ncgSet_NO\nsig_mod\nhyper\n1308\n0.00\n0.19\n0.13\n0.06\n\n\ncgSet_pre\nsig_mod\nhyper\n894\n0.00\n0.31\n0.25\n0.06\n\n\ncgSet_pre\nfull_mod\nhyper\n1824\n0.00\n0.32\n0.28\n0.04\n\n\ncgSetm\nfull_mod\nhypo\n1400\n0.00\n0.49\n0.53\n-0.04\n\n\ncgSet_NO\nfull_mod\nhypo\n1184\n0.00\n0.49\n0.53\n-0.04\n\n\ncgSetm\nsig_mod\nhypo\n292\n0.00\n0.47\n0.53\n-0.07\n\n\ncgSet_NO\nsig_mod\nhypo\n247\n0.00\n0.47\n0.54\n-0.07\n\n\ncgSet_Exprs\nfull_mod\nhyper\n418\n0.00\n0.23\n0.19\n0.04\n\n\ncgSet_Exprs\nsig_mod\nhyper\n175\n0.00\n0.19\n0.13\n0.05\n\n\ncgSet_Exprs\nfull_mod\nhypo\n230\n0.04\n0.47\n0.50\n-0.03\n\n\ncgSet_Exprs\nsig_mod\nhypo\n48\n0.06\n0.46\n0.52\n-0.07\n\n\n\n\n\n\n\n# kableExtra::kbl(z_bimodal[,.SD,.SDcols=c(\"ref\",\"model\",\"type\",\"estimate\",\"conf.int\",\"p.value\")],digits=2) |&gt; kableExtra::kable_classic()\n\nIn this second statistical test, instead of comparing the distribution of the two groups we are splitting the data into hyper and hypomethylation, so it adds a new layer of information. The data in the table is sorted by p.value, so it shows the most significant first, but there is the estimate mean difference too.\nThe results show that there are significant differences.\nDataset means are all significantlly diferent (either with wilcoxon or student t test). For cgSet_pre from the literature there is a decrease in methylation with age. There is an increase in methylation for the cgSet_NO dataset (without expression) and less differences for those sites correlated with expression changes.\n\n\n\n\np_long&lt;-melt(pdata, measure.vars=c(\"adult\",\"child\") )\np_long[,color:=ifelse(type  == \"hyper\",\"red\",\"green\")]\n\nlibrary(ggplot2)\nlibrary(viridis)\n\nWarning: package 'viridis' was built under R version 4.3.0\n\n\nLoading required package: viridisLite\n\n  p1&lt;-ggplot(p_long, aes(x=variable, y=value, fill= variable)) +\n     geom_boxplot(aes(fill=variable),outlier.fill=\"ivory\",alpha = 0.5) +\n      # scale_fill_manual(ys=levels(col_subclass)) +\n      geom_jitter(color=p_long$color,\n                  size=0.1,show.legend = TRUE,\n                  alpha=0.2) +\n\n      #theme_ipsum() +\n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta ys between young and old\") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n    \n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 4)\n  \n   \np2&lt;-ggplot(p_long[ref!=\"cgSetm\",], aes(x=variable, y=value, fill= variable)) +\n     geom_boxplot(aes(fill=variable),outlier.fill=\"ivory\",alpha = 0.5) +\n      # scale_fill_manual(ys=levels(col_subclass)) +\n      # geom_jitter(#color=pdata$color,\n      #             size=0.1,show.legend = TRUE,\n      #             alpha=0.2) +\n\n      #theme_ipsum() +\n      theme(\n        legend.position=\"left\",\n        plot.title = element_text(size=11)\n      ) +\n      ggtitle(\"Beta ys between young and old\") +\n      xlab(\"Cells\")+\n    ylab(\"relative fraction\")+\n            scale_x_discrete(guide = guide_axis(angle = 60))+\n    \n    facet_wrap(as.formula(paste(\"~ ref + model\" )),ncol = 2)\np2"
  },
  {
    "objectID": "signature.html#sec-inhouseref",
    "href": "signature.html#sec-inhouseref",
    "title": "age signature",
    "section": "",
    "text": "Since we suspect that our disease is related to accelarated aging but we don’t really know if one reference data is going to be better than the other for our disease, we created a combination of reference sets that try to capture as much variability as posible. This sets start with the prefix cgIn_ to differenciate them from the previous cgSet_.\nWe will also inspect which pathways are realted to each of these sets.\n\npathways_refsets&lt;-list()\n\nIn order to analyse which pathways are associated to the DMPs, we will first annotate the probes with gene names. To do that we will use the convinient annotation provided by illumina plataform for their EPIC methylation arrays.\n\nlibrary(data.table)\nlibrary(IlluminaHumanMethylationEPICanno.ilm10b2.hg19)\n\n# 1. Get gene names from EPIC annotation object\nEPIC_anno&lt;-data.table::as.data.table(as.data.frame(IlluminaHumanMethylationEPICanno.ilm10b2.hg19::Other),keep.rownames = \"cg\")\ndata.table::setkey(EPIC_anno,cg)\n\n# 2. Filter for significant probes and absolute mean difference of beta values &gt; 0.05 \ndt_path&lt;-p_long[model==\"sig_mod\"&abs(diff)&gt;0.05,.SD,.SDcols=c(\"ref\",\"cg\",\"type\",\"diff\")]\n\n# 3. add gene name information to our data.table\ndata.table::setkey(dt_path,cg)\ndt_path$gene_name &lt;- EPIC_anno[dt_path$cg,UCSC_RefGene_Name]\ndt_path$Contrast=\"controls\"\n\n\nhead(dt_path)\n\n\n\n  \n\n\n\n\n\nThe consensus set by merging all reference sets and selecting significant probes in our model.\n\nprobelist$cgIn_consensus &lt;- unique(dt_path$cg)#intersect(row.names(sig_mod), unique(unlist(probelist)))\n\nNow we will look at the associated pathways to that reference set:\n\nsource(\"R/functions.R\")\n# Crete a list to store pathways results:\ncgIn_consensus&lt;-list()\n\n# Subset annotation to the corresponding probeset:\nanno&lt;-dt_path[probelist$cgIn_consensus,]\n\n# Get hypomethylated genes list: \ngenes.hypo &lt;- unique(unlist(sapply(\n  anno[type==\"hypo\",gene_name]\n  ,function(x)unlist(strsplit(x,\";\")))))\n\n# Get pathways associated with the previous set:\npathways.hypo &lt;- gprofiler2::gost(signif = T ,genes.hypo)\n\n# Clean results:\ndth&lt;- data.table::as.data.table(pathways.hypo[[1]])\ndth[,FDR:=p_value]\ndth[,Contrast:=\"controls\"]\ndth[,TERM:=term_name]\ndth[,source:=factor(source)]\n\npathway&lt;-path_results(dth,method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\n\n# Store results \ncgIn_consensus$hypo &lt;- pathway\n\n# Repeat for hypermethylated genes: \n\ngenes.hyper &lt;- unique(unlist(sapply(\n  anno[type==\"hyper\",gene_name]\n  ,function(x)unlist(strsplit(x,\";\")))))\npathways.hyper &lt;- gprofiler2::gost(signif = T ,genes.hyper)\n\n# Store results \ndth&lt;- data.table::as.data.table(pathways.hyper[[1]])\ndth[,FDR:=p_value]\ndth[,Contrast:=\"controls\"]\ndth[,TERM:=term_name]\ndth[,source:=factor(source)]\npathway&lt;-path_results(dth,method=\"source\",cols = c(\"term_size\",\"query_size\",\"intersection_size\"))\n\ncgIn_consensus$hyper&lt;-pathway\npathways_refsets[[\"cgIn_consensus\"]]&lt;-cgIn_consensus\n\n\n\n\ndtable(pathways_refsets$cgIn_consensus$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_consensus$hypo)\n\n\n\n\n\n\n\n\n\n\nSelect the top significant probes in our model. We will use limma’s topTable function to get the top 5000 most significant probes.\n\nprobelist$cgIn_top &lt;- rownames(limma::topTable(sig_mod,number=5000))\n\nFor convinience the chunk of code above has been converted to a function:\n\npathways_refsets[[\"cgIn_top\"]]&lt;-get_pathway(probeIDs = probelist$cgIn_top,dt=dt_path)\n\n\n\n\ndtable(pathways_refsets$cgIn_top$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_top$hypo)\n\n\n\n\n\n\n\n\n\n\nFrom all the reference datasets in the paper, cgSet_pre contains more DMPs in our data than any other.\n\nprobelist$cgIn_pre &lt;- dt_path[ref==\"cgSet_pre\",cg]\n\n\npathways_refsets[[\"cgIn_pre\"]]&lt;-get_pathway(probelist$cgIn_pre,dt=dt_path)\n\n\n\n\ndtable(pathways_refsets$cgIn_pre$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_pre$hypo)\n\n\n\n\n\n\n\n\n\n\nAlthough it has less %DMPs than When we perform the t-test the dataset from PBMC cell line without changes in expression has a lower p-value.\n\nprobelist$cgIn_NO &lt;- dt_path[ref==\"cgSet_NO\",cg]\n\n\npathways_refsets[[\"cgIn_NO\"]]&lt;-get_pathway(probelist$cgIn_NO,dt=dt_path)\n\n\n\n\ndtable(pathways_refsets$cgIn_NO$hyper)\n\n\n\n\n\n\n\n\n\n\ndtable(pathways_refsets$cgIn_NO$hypo)"
  },
  {
    "objectID": "signature.html#amn_adults",
    "href": "signature.html#amn_adults",
    "title": "age signature",
    "section": "2.1 AMN_Adults:",
    "text": "2.1 AMN_Adults:\nSince we only have childs with the cerebral condition, and we believe that the disease could behave differently in childs and adults, we will first only focus in adults with AMN, cAMN (AMN + cerebral) and controls.\n\nlibrary(data.table)\nss_adults &lt;- readRDS(\"data/ss_Adults.rds\")\n\nrgSet &lt;- cnv.methyl::read.metharray.exp.par(targets=ss_adults,ncores = 36,folder = \"analysis/intermediate/\")\nrgSet &lt;- minfi::read.metharray.exp(targets = ss_adults)\n\nmset &lt;- name_rgset(rgSet,ss_adults,exclude=\"206702460034_R05C01\",newname=\"Sample_Name\")\n\nadults&lt;-filter(                                         # 1.- Filters: -probes: pval&lt;0.01 \n    targets=ss_adults, rgSet=mset,sampGroups=\"Sample_Group\", #              -samples: 10% probes fail\n    qc_folder = \"analysis/\")\nss_adults &lt;- data.table::data.table(as.data.frame(adults@colData))\n\n\ntable(ss_adults$Type)\n\n\nControl Disease \n     11      60 \n\n\nAlso, we can distinguish between controls and the two types of disease AMN and cerebral.\n\ntable(droplevels.factor(ss_adults$Condition))\n\n\n      AMN      cAMN CTL.adult \n       52         8        11 \n\n\nThus, we have 2 possible different comparisons. Either we group togehter all the patients or we distinguish 2 phenotypes.\n\n2.1.1 Normalization:\nFollowing the aforementioned paper @Steegenga2014 we now normalize the data using the subset-quantile within array normalization (SWAN) method:\n\nlibrary(minfi)\nnorm&lt;-minfi::preprocessSWAN(adults)\nclean &lt;- prep(norm, remove_sex=F, arraytype=\"EPIC\")\n\n\n\n2.1.2 Methylation differences:\nSince we are interested in age related differences caused by the disease we must remove normal methylation changes due to age. Then remaining differences in methylation in previously selected age-related probes can be attributed to the disease phenotypes. There are 2 ways of removing the effects of age.\n\nWe can remove the effect of Age from the data by regressing on Age and using the residuals to fit a second model. Then we can use the disease group as the predictor variable to see if any group is showing more methylation than the controls for the age-specific sites.\nAnother option is to add Age as a covariate in the model.\n\n\n2.1.2.1 Model1: correct for age and use residuals:\n\nbvals&lt;-getM(clean) \ndesign &lt;- model.matrix(~Age,data = ss_adults)\nss_adults &lt;- ss_adults[ss_adults$Sample_Name %in% colnames(bvals)]\nage_fit &lt;- limma::lmFit(bvals, design=design )\nres &lt;- residuals(age_fit, bvals)\n\nNow we perform a linear model comparing disease and control group:\n\nres_mod_ext &lt;- mod(object = res, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,\n                        idcol=\"Sample_Name\")\nres_mod &lt;- mod(object = res, group_var = \"Type\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,\n                        idcol=\"Sample_Name\")\n\n\nsig_res_mod&lt;-res_mod[abs(res_mod$t)&gt;2 & res_mod$p.value &lt; 0.01 ,]\n\n1.44^{4} were significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_res_mod,                         # Toptable & stats\n                                            ContrastsDM = colnames(res_mod$contrasts),\n                                            beta_normalized = getBeta(clean),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\ndmps$Type &lt;- ifelse(dmps$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps&lt;-as.data.table(dmps, keep.rownames=T)\nsaveRDS(dmps,\"data/dmps_adults_res.rds\")\ndmps_ext &lt;- cnv.methyl::DMPextr(fit = res_mod_ext,                         # Toptable & stats\n                                            ContrastsDM = colnames(res_mod_ext$contrasts),\n                                            beta_normalized = getBeta(clean),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\ndmps_ext$Type &lt;- ifelse(dmps_ext$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps_ext&lt;- as.data.table(dmps_ext[abs(dmps_ext$t)&gt;2 & dmps_ext$P.Value &lt; 0.01,],keep.rownames = T)\n\nsaveRDS(dmps_ext,\"data/dmps_adults_ext.rds\")\n\nThe 2 dmp sets can be merged together into a single data.frame:\n\nlibrary(data.table)\nDMPs &lt;- rbind(dmps, dmps_ext)\n\nDMPs&lt;-DMPs[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nsaveRDS(DMPs,\"data/dmps_adults.rds\")\n\nSo there are 255 DMPs.\nThis is the number of DMPs for each of the Contrasts:\n\ntable(DMPs$Contrast)\n\n\n       AMN-cAMN  cAMN-CTL.adult Disease-Control \n             19              24             212 \n\n\n\n2.1.2.1.1 DMP plots\n\nplotDMP(data.table::as.data.table(DMPs))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.2.2 Model2: Add age as a covariate:\n\nbvals2&lt;-getM(clean) \n\nmod2_ext &lt;- mod(object = bvals2, group_var = \"Condition\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults,covs = \"Age\",\n                        idcol=\"Sample_Name\")\nmod2 &lt;- mod(object = bvals2, group_var = \"Type\",\n                        singular=F,pairwise = T,\n                        metadata = ss_adults, covs = \"Age\",\n                        idcol=\"Sample_Name\")\n\n\nsig_mod2&lt;-mod2[abs(mod2$t)&gt;2 & mod2$p.value &lt; 0.01 ,]\n# Have to check the filters for each of the 3 contrasts by sepparate for example applying lapply on contrast. Will make one dmp for each of the contrasts.\n# sig_mod2_ext&lt;-mod2_ext[abs(mod2_ext$t)&gt;2 & mod2_ext$p.value &lt; 0.01 ,]\n\nwere significantly regulated (Lima t test, p &lt; 0.01) between the group of adult and child subjects using −2 &gt; t value &gt; 2 as a cut-off.\n\nlibrary(cnv.methyl)\nlibrary(minfi)\ndmps &lt;- cnv.methyl::DMPextr(fit = sig_mod2,                         # Toptable & stats\n                                            ContrastsDM = colnames(sig_mod2$contrasts),\n                                            beta_normalized = minfi::getBeta(clean),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\ndmps$Type &lt;- ifelse(dmps$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps&lt;-as.data.table(dmps, keep.rownames=T)\nsaveRDS(dmps,\"data/dmps_mod2.rds\")\ndmps_ext &lt;- cnv.methyl::DMPextr(fit = mod2_ext,                         # Toptable & stats\n                                            ContrastsDM = colnames(mod2_ext$contrasts),\n                                            beta_normalized = minfi::getBeta(clean),\n                                            p.value = 0.01,\n                                            mDiff = 0.05,\n                                            ann = minfi::getAnnotation(adults),\n                                            writeOut = F)\ndmps_ext$Type &lt;- ifelse(dmps_ext$diff_meanMeth &gt; 0,\"Hyper\",\"Hypo\")\ndmps_ext&lt;- as.data.table(dmps_ext[abs(dmps_ext$t)&gt;2 & dmps_ext$P.Value &lt; 0.01,],keep.rownames = T)\nsaveRDS(dmps_ext,\"data/dmps_mod2_ext.rds\")\n\nThe 2 dmp sets can be merged together into a single data.frame:\n\nlibrary(data.table)\nDMPs2 &lt;- rbind(dmps, dmps_ext)\n\nDMPs2&lt;-DMPs2[,UCSC_RefGene_Name:=sapply(UCSC_RefGene_Name,function(x) paste(unique(unlist(strsplit(x,\";\"))),collapse = \";\"))]\nNROW(DMPs2)\n\nSo there are 258 DMPs2.\n\ntable(DMPs2$Contrast)\n\n\n       AMN-cAMN  cAMN-CTL.adult Disease-Control \n             24               4             230 \n\n\n\n2.1.2.2.1 DMPs plots:\n\nplotDMP(data.table::as.data.table(DMPs2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.2.3 Model comparison:\nBoth models seem to yield very similar results. Let’s put it together:\n\nDMPs_tab &lt;- rbind(\n  cbind(model=\"m1\",DMPs[,table(Type, Contrast)]),\n  cbind(model=\"m2\",DMPs2[,table(Type, Contrast)])\n)\n\ndata.frame(DMPs_tab)\n\n\n\n  \n\n\n\nThere are no significative differences between AMN and the controls, maybe because the hetereogeneity of AMN group and the inbalance on the samples. In any case, if they exist the differences are very subtle and they can be attributed to age.\n\nDMPs2[Contrast == \"AMN-CTL.adult\",list(probe=rn,chr,pos,Type,Beta_difference=round(diff_meanMeth,2),gene=UCSC_RefGene_Name,UCSC_RefGene_Group,Relation_to_Island) ]\n\n\n\n  \n\n\n\nNevertheless there are some sites spotted for cAMN vs controls. Furthermore, the number of DMPs is increased for the contrast AMN-cAMN.\n\ndt2 &lt;- DMPs2[Contrast == \"AMN-cAMN\",list(probe=rn,Contrast,chr,pos,Type,Beta_difference=round(diff_meanMeth,2),gene=UCSC_RefGene_Name,UCSC_RefGene_Group,Relation_to_Island) ]\nrange(dt2[[\"Beta_difference\"]])\n\n[1] -0.10 -0.05\n\nhead(dt2[order(-abs(dt2[[\"Beta_difference\"]]))],20)\n\n\n\n  \n\n\n\nAs shown in the table above there are much higher differences between the 2 conditions than between either of them with the control. This suggest that rather than having more methylation in the same direction by favouring similar methylation processes there may be different mechanisms involved methylating different sites for AMN and cAMN.\nAnd here is a table with top 10 DMP sites for each contrast:\n\ndt10 &lt;- DMPs2[,list(probe=rn,Contrast,chr,pos,Type,Beta_difference=round(diff_meanMeth,2),gene=UCSC_RefGene_Name,UCSC_RefGene_Group,Relation_to_Island) ]\ndmp10&lt;-dt10[order(-abs(Beta_difference)),head(.SD,10),by=Contrast]\ndtable(dmp10)\n\n\n\n\n\n\nYou can take a look at the scatter plots on how do the beta values of each of these 24 sites change with age here Section 2.1.3.3.1\n\n\n\n2.1.3 reference vs Adults:\n\n2.1.3.1 data inspection:\nWe have 4 models:\n\nAge corrected by fitting residuals (m1):\n\nres_mod 2 factors: control & disease\nres_mod_ext3 factors: 2 disease AMN cAMN + controls\n\nCondition + Age as covariate:\n\nmod22 factors: control & disease\nmod2_ext 3 factors: 2 disease AMN cAMN + controls\n\n\nWe have 8 reference sets, inside our probelist list object. The same 4 reference sets used previously with the controls with cgsites extracted from the paper supplementary material (tables 2S, 3S & 4S) plus the 4 datasets that come from our own controls by comparing young and old healthy subjects Section 1.5.\nIn order to assess the enrichment of each dataset for our disease in a quantitative manner, the percentage of probes in each of the sets that are significantlly methylated is calculated.\n\ncont&lt;-colnames(res_mod_ext$contrasts)\n\ntab &lt;- t(sapply(probelist,function(x) table(rownames(res_mod) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_res_mod) %in% x)))\ntab3 &lt;- sapply(\n  probelist,\n  function(p) length(intersect(rownames(sig_res_mod),p))\n  )\n\ntab4 &lt;- data.table::as.data.table(sapply(cont,function(x){\n  tval &lt;- res_mod_ext$t[,x]\n  pval &lt;- res_mod_ext$p.value[,x]\n  tval.i &lt;- which(abs(tval) &gt; 2 )\n  pval.i &lt;- which(pval &lt; 0.01)\n  i&lt;-intersect(tval.i, pval.i)\n  cg=names(tval[i])\n  sapply(probelist,function(p) length(intersect(cg,p)))\n  }),keep.rownames = T)\n\ndtab&lt;-tab4[,\"Disease-Control\":=tab2[,2]]\ndtab[,\"Common_probes\":=tab[,2]]\ndtab[, total := sapply(probelist,NROW)]\ndtab[, model := \"m1\"]\n\n#### model2\ntab &lt;- t(sapply(probelist,function(x) table(rownames(mod2) %in% x)))\ntab2 &lt;- t(sapply(probelist,function(x) table(rownames(sig_mod2) %in% x)))\ntab3 &lt;- sapply(cont,function(x){\n  x=names(mod2_ext$t[,x])\n  sapply(probelist,function(p) length(intersect(x,p)))\n  })\n\ntab4 &lt;- data.table::as.data.table(sapply(cont,function(x){\n  tval &lt;- mod2_ext$t[,x]\n  pval &lt;- mod2_ext$p.value[,x]\n  tval.i &lt;- which(abs(tval) &gt; 2 )\n  pval.i &lt;- which(pval &lt; 0.01)\n  i&lt;-intersect(tval.i, pval.i)\n  cg=names(tval[i])\n  sapply(probelist,function(p) length(intersect(cg,p)))\n  }),keep.rownames = T)\n\ndtab2&lt;-tab4[,\"Disease-Control\":=tab2[,2]]\ndtab2[,\"Common_probes\":=tab[,2]]\ndtab2[, total := sapply(probelist,NROW)]\ndtab2[, model := \"m2\"]\n\nDtab &lt;- rbind(dtab,dtab2)\nper &lt;- Dtab[,c( Common_probes, total,\n             lapply(.SD,function(x)paste0(x,\" (\",round(x/as.numeric(Common_probes) *100,2),\"%)\"))\n),by=c(\"rn\",\"model\"),.SDcols=cont]\n\n\nper\n\n\n\n  \n\n\n\nIn general, all the sets perform in a similar way except for the one selecting top5000 DMPs.\nThe 2 sets that seem to be more enriched for age-related methylation changes are the one based on our own controls cgIn_top and the one with no associated expression change cgIn_NO. It is not surprising to see that the set of probes based on the differences observed from our own data outperforms the sets coming from other sources.\nIn respect with the set with no-expression, in the paper they hypothesize that methylation changes uncorrelated with changes in expression may be caused by aging.\n\n\n2.1.3.2 Betas:\nNow let’s take the beta values in consideration:\n\n2.1.3.2.1 Betas residual model:\n\nbetas &lt;- M2B(res)\n\n\n\nmodels&lt;-list(res_mod=res_mod,\n             res_mod_ext=res_mod_ext\n             # mod2=mod2,\n             # mod2_ext=mod2_ext,\n             \n             )\n\nbetas_res &lt;- lapply(names(models),function(model_name){\n  # Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\n  fit&lt;-models[[model_name]]\n  design &lt;- t(fit$design)\n\n  dt_c&lt;-rbindlist(lapply(names(probelist), function(n){\n    idx&lt;-intersect(probelist[[n]],rownames(fit))\n    cgs&lt;-intersect(idx,rownames(betas))\n    b &lt;- betas[cgs,]\n    # For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\n    dt=as.data.table(apply(design , 1 , function(x) apply(b %*% diag(x),1 , function(y) mean(y[y!=0]))))\n    dt$ref=n\n    dt$cg&lt;-cgs\n    dt$model=model_name\n    dt\n    b&lt;-melt(dt,id.vars = c(\"ref\",\"cg\",\"model\"),variable.name = \"Condition\",value.name = \"bVal\")-&gt;b\n    b\n    }\n  ))\n  dt_c\n})\nnames(betas_res)&lt;-names(models)\ndtb_res &lt;- rbindlist(betas_res)\ndtbm_res &lt;- melt(dtb_res, value.name = \"bVal\",)\ndtbm_res &lt;- dtbm_res[Condition!=\"Age\"]\ndtbm_res$model &lt;- \"residuals\"\n\nb2_dt &lt;- as.data.table(res,keep.rownames = \"cg\")\nb2_m &lt;- melt(b2_dt,variable.name = \"Sample_Name\", value.name = \"bVal\")\nb2_res&lt;-merge(b2_m,ss_adults[,.SD, .SDcols=c(\"Sample_Name\", \"Age\",\"Condition\")])\nb2_res$model=\"residuals\"\n\n\nbetas &lt;- M2B(bvals2)\nmodels&lt;-list(\n  # res_mod=res_mod,\n  # res_mod_ext=res_mod_ext\n  mod2=mod2,\n  mod2_ext=mod2_ext\n)\n\nbetas_cov &lt;- lapply(names(models),function(model_name){\n  # Row index to multiply by betas taking the columns present in each contrast multiplying by 1/0\n  fit&lt;-models[[model_name]]\n  design &lt;- t(fit$design)\n\n  dt_c&lt;-rbindlist(lapply(names(probelist), function(n){\n    idx&lt;-intersect(probelist[[n]],rownames(fit))\n    cgs&lt;-intersect(idx,rownames(betas))\n    b &lt;- betas[cgs,]\n    # For each row on design (columns selected for each contrast) do betas * 1/0 to get the correct columns and then do the mean values for each group:\n    dt=as.data.table(apply(design , 1 , function(x) apply(b %*% diag(x),1 , function(y) mean(y[y!=0]))))\n    dt$ref=n\n    dt$cg&lt;-cgs\n    dt$model=model_name\n    dt\n    b&lt;-melt(dt,id.vars = c(\"ref\",\"cg\",\"model\"),variable.name = \"Condition\",value.name = \"bVal\")-&gt;b\n    b\n    }\n  ))\n  dt_c\n})\nnames(betas_cov)&lt;-names(models)\ndtb_cov &lt;- rbindlist(betas_cov)\ndtbm_cov &lt;- melt(dtb_cov, value.name = \"bVal\",)\ndtbm_cov &lt;- dtbm_cov[Condition!=\"Age\"]\ndtbm_cov$model &lt;- \"covariate\"\n\n\nb2_dt &lt;- as.data.table(betas,keep.rownames = \"cg\")\nb2_m &lt;- melt(b2_dt,variable.name = \"Sample_Name\", value.name = \"bVal\")\nb2_cov&lt;-merge(b2_m,ss_adults[,.SD, .SDcols=c(\"Sample_Name\", \"Age\",\"Condition\")])\nb2_cov$model=\"covariate\"\n\n\n# Mean Beta values for the contrasts:\npdata&lt;-rbind(dtbm_cov,dtbm_res)\npdata&lt;-pdata[!is.na(bVal),]\npdata&lt;-pdata[Condition !=\"Age\",]\npdata[startsWith( model,\"res_mod\"),model:=\"residuals\"]\npdata[startsWith( model,\"mod2\"),model:=\"covariate\"]\nsaveRDS(pdata,\"data/pdata_adults.rds\")\n\n\n#Beta Values for individual samples: \npdata_indiv&lt;-rbind(b2_cov,b2_res) \nsaveRDS(pdata_indiv,\"data/pdata_adults_indiv.rds\")\n\nWe are ready to test mean differences and plot:\n\n\n\n2.1.3.3 Plots:\nLet’s see at the general distribution of the density plot.\n\nde&lt;-limma::plotDensities(mod2_ext)\nde\n\nWe see that cAMD looks the more extreme\n\n2.1.3.3.1 top10 Beta vs age plot\nHere we inspect the top DMP sites individually. We selected the top 10 DMPs for each of the contrasts:\n\ntable(dmp10$Contrast)\n\n\n       AMN-cAMN  cAMN-CTL.adult Disease-Control \n             10               4              10 \n\n\n\nlibrary(ggplot2)\nlibrary(gridExtra)\n\nWarning: package 'gridExtra' was built under R version 4.3.0\n\n\n\nAttaching package: 'gridExtra'\n\n\nThe following object is masked from 'package:minfi':\n\n    combine\n\n\nThe following object is masked from 'package:Biobase':\n\n    combine\n\n\nThe following object is masked from 'package:BiocGenerics':\n\n    combine\n\nplt_list_DMP &lt;- list()\nfor (cont in unique(dtp$Contrast)){\n  dtp_c &lt;- dtp[Contrast == cont,]\n  dt_mean &lt;- dtp_c[,list(b=mean(bVal),avage=mean(Age)),by=c(\"Condition\",\"model\",\"cg\")]\nplt_list_DMP[[cont]]&lt;-ggplot(dtp_c, aes(x = Age, y = bVal, color=Condition, group=factor(model) )) +\n    geom_point() +\n    # ylim(0, 1) +\n    geom_point(data=dt_mean,aes(x=avage,y=b,col=Condition),size=4,shape=24)  +\n    geom_smooth(aes(group=Condition),\n              method = \"lm\", formula = y ~ x, se = F) +\n\n    labs(title=paste0('Beta values vs. Age: ', cont, 'top 10 Differentially methylated sites.'), x='Age', y='Residuals') +\n      facet_grid(cg ~ Contrast, margins = F)\n\n}\nlapply(plt_list_DMP,plot)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$`Disease-Control`\n\n\n\n\n\n\n$`AMN-cAMN`\n\n\n\n\n\n\n\n\n$`cAMN-CTL.adult`\n\n\n\n\n\n\n\n\n\n\n2.1.3.4 Significance test:\n\nlibrary(data.table)\npdata&lt;-pdata_adults\npdata_res&lt;-pdata[model == \"covariate\",]\nzt&lt;-list()\npdata_res[,sd:=stats::sd(bVal),by=c(\"model\",\"Condition\")]\nsd_tab&lt;-pdata_res[,unique(sd),by=Condition]\npdata_res_w&lt;-dcast(pdata_res,cg+model+ref~Condition,value.var = c(\"bVal\"))\nz_bimodal_Disease &lt;- pdata_res_w[,c(\n  N=.N,\n  BSDA::z.test(\n    TypeControl,\n    TypeDisease,\n    sigma.x=sd_tab[Condition==\"TypeControl\",V1],\n    sigma.y=sd_tab[Condition==\"TypeDisease\",V1]\n    )\n  ),by=c(\"ref\",\"model\")]\nz_bimodal_Disease[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_Disease[,condition:=\"Disease\"]\nzt[[\"Disease\"]] &lt;- dcast(z_bimodal_Disease, ref + model + condition+ N + p.value ~ group, value.var = c(\"estimate\"))\n\n\n\nz_bimodal_AMN &lt;- pdata_res_w[,c(\n  N=.N,\n  BSDA::z.test(\n    ConditionCTL.adult,\n    ConditionAMN,\n    sigma.y=sd_tab[Condition==\"ConditionCTL.adult\",V1],\n    sigma.x=sd_tab[Condition==\"ConditionAMN\",V1]\n    )\n  ),by=c(\"ref\",\"model\")]\n\nz_bimodal_AMN[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_AMN[,condition:=\"AMN\"]\nzt[[\"AMN\"]] &lt;- dcast(z_bimodal_AMN, ref + model + condition+ N + p.value ~ group, value.var = c(\"estimate\"))\n\nz_bimodal_cAMN &lt;- pdata_res_w[,c(\n  N=.N,\n  BSDA::z.test(\n    ConditionCTL.adult,\n    ConditioncAMN,\n    sigma.x=sd_tab[Condition==\"ConditionCTL.adult\",V1],\n    sigma.y=sd_tab[Condition==\"ConditioncAMN\",V1]\n        )\n  ),by=c(\"ref\",\"model\")]\nz_bimodal_cAMN[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_cAMN[,condition:=\"cAMN\"]\nzt[[\"cAMN\"]] &lt;- dcast(z_bimodal_cAMN, ref + model + condition+  N + p.value ~ group, value.var = c(\"estimate\"))\n\nztab&lt;-rbindlist(zt)\n# t_bimodal &lt;- pdata_res[,t.test(child,adult),by=c(\"ref\",\"model\",\"type\")]\n\nztab[,diff:=Case-Ctl]\ndata.table::setorder(ztab,p.value,diff)\nkableExtra::kbl(ztab)|&gt;kableExtra::kable_classic_2()\n\n\n\nTable 2.1: Adult Disease vs Adult Controls methylation distributions significance test.\n\n\nref\nmodel\ncondition\nN\np.value\nCase\nCtl\ndiff\n\n\n\n\ncgIn_top\ncovariate\ncAMN\n4696\n0.00\n0.51\n0.48\n0.02\n\n\ncgSetm\ncovariate\ncAMN\n4556\n0.04\n0.32\n0.31\n0.01\n\n\ncgSet_NO\ncovariate\ncAMN\n3956\n0.06\n0.32\n0.31\n0.01\n\n\ncgIn_literature\ncovariate\nAMN\n3021\n0.09\n0.48\n0.47\n0.01\n\n\ncgSetm\ncovariate\nAMN\n4556\n0.10\n0.30\n0.31\n-0.01\n\n\ncgIn_literature\ncovariate\nDisease\n3021\n0.10\n0.48\n0.47\n0.01\n\n\ncgSet_NO\ncovariate\nAMN\n3956\n0.12\n0.30\n0.31\n-0.01\n\n\ncgIn_consensus\ncovariate\ncAMN\n3840\n0.12\n0.44\n0.43\n0.01\n\n\ncgIn_literature\ncovariate\ncAMN\n3021\n0.13\n0.48\n0.47\n0.01\n\n\ncgIn_top\ncovariate\nDisease\n4696\n0.14\n0.49\n0.48\n0.01\n\n\ncgSet_pre\ncovariate\ncAMN\n6878\n0.16\n0.43\n0.42\n0.01\n\n\ncgIn_NO\ncovariate\nAMN\n841\n0.21\n0.27\n0.29\n-0.01\n\n\ncgSetm\ncovariate\nDisease\n4556\n0.24\n0.30\n0.31\n-0.01\n\n\ncgSet_pre\ncovariate\nDisease\n6878\n0.26\n0.43\n0.42\n0.00\n\n\ncgSet_NO\ncovariate\nDisease\n3956\n0.27\n0.30\n0.31\n-0.01\n\n\ncgSet_pre\ncovariate\nAMN\n6878\n0.28\n0.43\n0.42\n0.00\n\n\ncgIn_NO\ncovariate\nDisease\n841\n0.30\n0.28\n0.29\n-0.01\n\n\ncgIn_consensus\ncovariate\nDisease\n3840\n0.32\n0.43\n0.43\n0.00\n\n\ncgIn_top\ncovariate\nAMN\n4696\n0.33\n0.49\n0.48\n0.00\n\n\ncgIn_consensus\ncovariate\nAMN\n3840\n0.37\n0.43\n0.43\n0.00\n\n\ncgSet_Exprs\ncovariate\ncAMN\n638\n0.38\n0.33\n0.32\n0.01\n\n\ncgSet_Exprs\ncovariate\nAMN\n638\n0.57\n0.32\n0.32\n-0.01\n\n\ncgIn_NO\ncovariate\ncAMN\n841\n0.64\n0.29\n0.29\n0.00\n\n\ncgSet_Exprs\ncovariate\nDisease\n638\n0.71\n0.32\n0.32\n0.00\n\n\n\n\n\n\n\n# kableExtra::kbl(z_bimodal[,.SD,.SDcols=c(\"ref\",\"model\",\"type\",\"estimate\",\"conf.int\",\"p.value\")],digits=2) |&gt; kableExtra::kable_classic()\n\n\npdata&lt;-pdata_adults\npdata_res&lt;-pdata[model == \"residuals\",]\nzt&lt;-list()\npdata_res[,sd:=stats::sd(bVal),by=c(\"model\",\"Condition\")]\nsd_tab&lt;-pdata_res[,unique(sd),by=Condition]\npdata_res_w&lt;-dcast(pdata_res,cg+model+ref~Condition,value.var = c(\"bVal\"))\nz_bimodal_Disease &lt;- pdata_res_w[,c(\n  N=.N,\n  BSDA::z.test(\n    TypeControl,\n    TypeDisease,\n    sigma.x=sd_tab[Condition==\"TypeControl\",V1],\n    sigma.y=sd_tab[Condition==\"TypeDisease\",V1]\n    )\n  ),by=c(\"ref\",\"model\")]\nz_bimodal_Disease[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_Disease[,condition:=\"Disease\"]\nzt[[\"Disease\"]] &lt;- dcast(z_bimodal_Disease, ref + model + condition+ N + p.value ~ group, value.var = c(\"estimate\"))\n\n\n\nz_bimodal_AMN &lt;- pdata_res_w[,c(\n  N=.N,\n  BSDA::z.test(\n    ConditionCTL.adult,\n    ConditionAMN,\n    sigma.y=sd_tab[Condition==\"ConditionCTL.adult\",V1],\n    sigma.x=sd_tab[Condition==\"ConditionAMN\",V1]\n    )\n  ),by=c(\"ref\",\"model\")]\n\nz_bimodal_AMN[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_AMN[,condition:=\"AMN\"]\nzt[[\"AMN\"]] &lt;- dcast(z_bimodal_AMN, ref + model + condition+ N + p.value ~ group, value.var = c(\"estimate\"))\n\nz_bimodal_cAMN &lt;- pdata_res_w[,c(\n  N=.N,\n  BSDA::z.test(\n    ConditionCTL.adult,\n    ConditioncAMN,\n    sigma.x=sd_tab[Condition==\"ConditionCTL.adult\",V1],\n    sigma.y=sd_tab[Condition==\"ConditioncAMN\",V1]\n        )\n  ),by=c(\"ref\",\"model\")]\nz_bimodal_cAMN[,group:=rep(c(\"Ctl\",\"Case\"),.N/2)]\nz_bimodal_cAMN[,condition:=\"cAMN\"]\nzt[[\"cAMN\"]] &lt;- dcast(z_bimodal_cAMN, ref + model + condition+  N + p.value ~ group, value.var = c(\"estimate\"))\n\nztab&lt;-rbindlist(zt)\n# t_bimodal &lt;- pdata_res[,t.test(child,adult),by=c(\"ref\",\"model\",\"type\")]\n\nztab[,diff:=Case-Ctl]\ndata.table::setorder(ztab,p.value,diff)\nkableExtra::kbl(ztab)|&gt;kableExtra::kable_classic_2()\n\n\n\nTable 2.2: Adult Disease vs Adult Controls methylation distributions significance test.\n\n\nref\nmodel\ncondition\nN\np.value\nCase\nCtl\ndiff\n\n\n\n\ncgIn_top\nresiduals\ncAMN\n4696\n0\n0.52\n0.50\n0.02\n\n\ncgSetm\nresiduals\ncAMN\n4556\n0\n0.52\n0.50\n0.02\n\n\ncgSet_NO\nresiduals\ncAMN\n3956\n0\n0.52\n0.50\n0.02\n\n\ncgSetm\nresiduals\nAMN\n4556\n0\n0.50\n0.50\n-0.01\n\n\ncgSet_NO\nresiduals\nAMN\n3956\n0\n0.50\n0.50\n-0.01\n\n\ncgIn_literature\nresiduals\nDisease\n3021\n0\n0.50\n0.49\n0.01\n\n\ncgIn_literature\nresiduals\nAMN\n3021\n0\n0.50\n0.49\n0.01\n\n\ncgIn_NO\nresiduals\nAMN\n841\n0\n0.49\n0.51\n-0.02\n\n\ncgSetm\nresiduals\nDisease\n4556\n0\n0.50\n0.50\n-0.01\n\n\ncgIn_NO\nresiduals\nDisease\n841\n0\n0.50\n0.51\n-0.01\n\n\ncgIn_consensus\nresiduals\ncAMN\n3840\n0\n0.51\n0.50\n0.01\n\n\ncgSet_NO\nresiduals\nDisease\n3956\n0\n0.50\n0.50\n-0.01\n\n\ncgSet_pre\nresiduals\ncAMN\n6878\n0\n0.50\n0.50\n0.01\n\n\ncgSet_Exprs\nresiduals\ncAMN\n638\n0\n0.52\n0.50\n0.02\n\n\ncgSet_pre\nresiduals\nDisease\n6878\n0\n0.50\n0.50\n0.00\n\n\ncgIn_literature\nresiduals\ncAMN\n3021\n0\n0.50\n0.49\n0.01\n\n\ncgIn_NO\nresiduals\ncAMN\n841\n0\n0.53\n0.51\n0.01\n\n\ncgIn_consensus\nresiduals\nDisease\n3840\n0\n0.50\n0.50\n0.00\n\n\ncgSet_pre\nresiduals\nAMN\n6878\n0\n0.50\n0.50\n0.00\n\n\ncgIn_consensus\nresiduals\nAMN\n3840\n0\n0.50\n0.50\n0.00\n\n\ncgSet_Exprs\nresiduals\nAMN\n638\n0\n0.50\n0.50\n-0.01\n\n\ncgIn_top\nresiduals\nDisease\n4696\n0\n0.50\n0.50\n0.00\n\n\ncgSet_Exprs\nresiduals\nDisease\n638\n0\n0.50\n0.50\n0.00\n\n\ncgIn_top\nresiduals\nAMN\n4696\n0\n0.50\n0.50\n0.00\n\n\n\n\n\n\n\n# kableExtra::kbl(z_bimodal[,.SD,.SDcols=c(\"ref\",\"model\",\"type\",\"estimate\",\"conf.int\",\"p.value\")],digits=2) |&gt; kableExtra::kable_classic()\n\nWe see there is a small difference in methylation for the dataset cgSetm which combines data that comes from PBMC cells, although that seems to be specially true for the subset with no correlation with expression changes. For more information about the pathways associated with the set of methylated genes for each reference set take a look at Section 1.5 set"
  },
  {
    "objectID": "signature.html#pathways",
    "href": "signature.html#pathways",
    "title": "age signature",
    "section": "3.1 Pathways:",
    "text": "3.1 Pathways:\n\n3.1.1 Hyper pathways:\n\ndtable(pathways_desease$hyper)\n\n\n\n\n\n\n\n\n3.1.2 Hypo pathways:\n\ndtable(pathways_desease$hypo)"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "References"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "XALD Methylation Project",
    "section": "",
    "text": "XALD Project: Study of methylation changes in Age-related cg sites associated with XALD disease\nThis book is created to give answer to the following questions:\n\nIs there an age-accelerating factor for XALD patients according to the changes in methylation?\nWhich is the methylation mark associated with XALD disease?\n\n\n\n\n\n\nImage by Kip Lyall.\n\n\n\nView Large Image \n\n\nFigure Viewer\n\n\nDownload Hi-res image \n\n\nDownload (PPT)"
  }
]